package ItemTypeGen
import initlater ObjEditingNatives
import initlater AbilityObjEditing
import initlater StatHandler
import initlater EquipmentQualityList
import initlater ObjectIds
import initlater DamageTypeList
import ItemTypeX
import ItemTypeList
import ItemTooltipGen

// State machine:
ItemTypeX currentItemTypeX
// State machine (compiletime):
ObjectDefinition currentObjectDefinition

// Creates a new instance of ItemTypeX initialized with ItemClass.EQUIPMENT.
public function itemgenNewEquipment(int raw, EquipmentQuality equipmentQuality, EquipmentSlot equipmentSlot, EquipmentClass equipmentClass, DamageType mainhandDamageType, string name, string description, string icon) returns int
	currentItemTypeX = new ItemTypeX(raw)
	currentItemTypeX.initPropertiesEquipment(equipmentSlot, equipmentClass, mainhandDamageType)
	if compiletimeMode
		tooltipReset()
		tooltipAddEquipmentProperties(equipmentSlot, equipmentClass, mainhandDamageType)
		tooltipAddDescription(description)
		let tt = tooltipGet()
		currentObjectDefinition = createObjectDefinition("w3t", raw, 'ches')
			..setString("unam", tooltipColorizeItemName(name, equipmentQuality))
			..setString("iico", icon)
			..setString("utub", tt)
			..setString("ides", tt)
	return raw

/** Sets stats for the current ItemTypeX object. */
public function itemgenSetStats(StatList statList)
	if compiletimeMode
		tooltipAddStatList(statList)
		let tt = tooltipGet()
		currentObjectDefinition.setString("utub", tt)
		currentObjectDefinition.setString("ides", tt)

public function stats() returns StatList
	return currentItemTypeX.stats

/** Sets attachments for the current ItemTypeX object. */
public function itemgenSetAttachment(string model, string point1, string point2)
	if compiletimeMode
		attachmentAbilityBaseRaw++
		var points = 0
		if point1 != ""
			points++
		if point2 != ""
			points++
		new AbilityDefinition(attachmentAbilityBaseRaw, 'AIfx')
			..setName("ItemAttachment")
			..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNPenguin.blp")
			..setTarget(model)
			..setTargetAttachmentPoint(point1)
			..setTargetAttachmentPoint1(point2)
			..setTargetAttachments(points)
		currentObjectDefinition.setString("iabi", idInteger2IdString(attachmentAbilityBaseRaw))
			

boolean compiletimeMode
int attachmentAbilityBaseRaw = 'AA00'

@compiletime function genObjects()
	compiletimeMode = true
	initItemTypeLists()
			
init
	compiletimeMode = false
	initItemTypeLists()