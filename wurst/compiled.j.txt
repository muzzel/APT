// this script was compiled with wurst 1.3.0.1-jenkins-Wurst-527
globals
integer array LinkedList_dummy
integer array LinkedList_size
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
string array Char_c2s
integer array Char_s2c
integer array Char_width
integer Char_MAX_INDEX
integer Char_DEFAULT_WIDTH
string Char_DEFAULT_STRING
hashtable Table_ht
integer Trigger_triggerData
string array Colors_hexs
integer Colors_decs
integer array Colors_playercolors
integer array Colors_playercolors_2
integer array Colors_playercolors_3
real Maths_PI
real Maths_PI2
real Maths_PIHALF
real Maths_DEGTORAD
real Maths_RADTODEG
integer Region_regionData
rect MapBounds_mapRect
region MapBounds_mapRegion
real MapBounds_mapMinX
real MapBounds_mapMinY
real MapBounds_mapMaxX
real MapBounds_mapMaxY
real MapBounds_mapCenter_x
real MapBounds_mapCenter_y
real Terrain_MAX_RANGE
integer Terrain_DUMMY_ITEM_ID
location Terrain_tempLoc
item Terrain_dItem
rect Terrain_find
item array Terrain_hid
integer Terrain_hidMax
real Terrain_tempPos_x
real Terrain_tempPos_y
boolean array PrintingHelper_wantDebug
integer PrintingHelper_DEBUG_LEVEL
real PrintingHelper_DEBUG_MSG_DURATION
string String_charset
string String_numberset
integer String_numbersetlength
integer String_charsetlength
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount
integer TimerUtils_timerData
integer TimerUtils_HELD
integer ForceIterator_tempIndex
player array ForceIterator_players
group TempGroups_ENUM_GROUP
integer Rect_sourceTable
integer array W3UDefinition_def
integer Basics_DUMMY_UNIT_ID
integer Basics_HEIGHT_ENABLER
integer Basics_TREE_RECOGNITION
integer Basics_LOCUST_ID
real Basics_ANIMATION_PERIOD
real Basics_MAX_COLLISION_SIZE
player Basics_DUMMY_PLAYER
player Basics_DUMMY_HOSTILE_PLAYER
integer TypeCasting_typecastdata
trigger TestUtils_smartCoordsTrigger
integer BonusHandlerConfig_MAX_BONUS_LIFE
integer BonusHandlerConfig_MAX_BONUS_MANA
integer BonusHandlerConfig_MAX_BONUS_DAMAGE
integer BonusHandlerConfig_MAX_BONUS_ARMOR
integer BonusHandlerConfig_MAX_BONUS_SIGHTRANGE
integer BonusHandlerConfig_MAX_BONUS_LIFEREGEN
integer BonusHandlerConfig_MAX_BONUS_MANAREGEN
integer BonusHandlerConfig_MAX_BONUS_ATTACKSPEED
integer BonusHandlerConfig_MAX_BONUS_STRENGTH
integer BonusHandlerConfig_MAX_BONUS_AGILITY
integer BonusHandlerConfig_MAX_BONUS_INTELLIGENCE
boolean BonusHandlerConfig_IS_MANAREGEN_PERCENTAL
integer array AbilityDefinition_def
string ObjectIds_charMap
integer array BonusHandler_powersOf2
integer array BonusHandler_rawShifts
integer BonusHandler_rawShiftNeg
integer array BonusHandler_bonusTypes
integer array BonusType_baseRaw
integer array BonusType_maxBonus
integer Rational_pow15
integer Rational_pow30
hashtable HashMap_ht
integer array StatHandler_statType
integer array StatHandler_statSubstat
integer array StatHandler_parentStat
integer array StatHandler_statChangedEvents
integer StatHandler_numStats
integer StatHandler_mapBaseStatBuffers
integer array StatHandler_mapUnitStatBuffers
integer StatHandler_DEFAULT_BASE_STAT_BUFFER
integer array StatEntity_stat
integer array StatEntity_val
integer array StatList_statList
integer array StatListIterator_iter
integer array StatListIterator_current
integer array UnitBaseStatBuffer_stats
integer array UnitBaseStatBuffer_arrayStart
integer array UnitStatBuffer_statsAbs
integer array UnitStatBuffer_statsPerc
integer array UnitStatBuffer_statsPerc_2
integer array UnitStatBuffer_cache
boolean array UnitStatBuffer_cacheDirty
integer array UnitStatBuffer_arrayStart
unit array UnitStatBuffer_u
integer array UnitStatBuffer_baseStats
integer UnitTypeX_raw2UnitType
integer array UnitTypeX_raw
integer array UnitTypeX_damageType
integer array UnitTypeX_unitBaseStatBuffer
integer HeroDummyGen_HERO_DUMMY_DEFAULT_RAW
integer HeroDummyGen_HERO_TYPE
integer HeroDummyGen_currentHeroDefinition
hashtable HeroDummyGen_map
integer HeroDummyGen_morphAbilities
integer HeroDummyGen_unmorphAbilities
boolean HeroDummyGen_compiletimeMode
integer HeroDummyGen_morphAbilityBaseRaw
integer HeroDummyGen_heroDummyBaseRaw
integer array UnitX_unitTypeX
unit array UnitX_u
player array UnitX_owner
integer array UnitX_unitStatBuffer
integer array UnitX_unitDamageHandler
integer array HeroUnitX_pu
integer ThreatHandlerConfig_TIME_TO_PORT
real ThreatHandlerConfig_RETURN_RANGE
real ThreatHandlerConfig_ORDER_RETURN_RANGE
real ThreatHandlerConfig_CAMP_RANGE
hashtable ThreatHandler_ht
integer array ThreatHandler_icList
integer ThreatHandler_icListLast
integer array ThreatHandlerCamp_icListId
integer array ThreatHandlerCamp_dummy
integer array ThreatHandlerCamp_state
integer array ThreatHandlerCamp_timeToPortLeft
unit array ThreatHandlerPU_u
integer array ThreatHandlerPU_dummy
integer array ThreatHandlerTU_state
unit array ThreatHandlerTU_u
real array ThreatHandlerTU_campPos
real array ThreatHandlerTU_campPos_2
integer array ThreatHandlerTU_dummy
trigger array ThreatHandlerTU_targetAcquireTrigger
integer array ThreatHandlerTU_camp
integer array ThreatHandlerTU_campPrev
integer array ThreatHandlerTU_campNext
integer array ThreatUnitIterator_tu
integer array ThreatUnitIterator_current
integer array ThreatListEntry_pu
integer array ThreatListEntry_tu
integer array ThreatListEntry_puPrev
integer array ThreatListEntry_puNext
integer array ThreatListEntry_tuPrev
integer array ThreatListEntry_tuNext
real array ThreatListEntry_threat
integer array CreepUnitX_tu
trigger DamageHandler_unitAttackTrigger
integer array UnitDamageHandler_parent
integer array UnitDamageHandler_damageType
integer EquipmentSlotList_EQUIPMENT_SLOT_COUNT
string ItemTooltipGen_tooltipHeader
string ItemTooltipGen_tooltipStats
string ItemTooltipGen_tooltipDescription
integer ItemTypeGen_currentItemTypeX
integer ItemTypeGen_currentObjectDefinition_key
boolean ItemTypeGen_compiletimeMode
integer array ItemTypeX_raw
integer array ItemTypeX_itemClass
integer array ItemTypeX_equipmentSlot
integer array ItemTypeX_equipmentClass
integer array ItemTypeX_stats
integer ItemX_currentCreationTimestamp
integer array PlayerX_instances
integer array PlayerX_playerId
integer Maptest_player1
integer Maptest_knight1
integer Maptest_hero
integer UnitTypeGen_currentUnitTypeX
integer UnitTypeGen_currentUnitDefinition
boolean UnitTypeGen_compiletimeMode
integer APT_NUM_OF_PLAYERS
integer array LinkedList_nextFree
integer LinkedList_firstFree
integer LinkedList_maxIndex
integer array LinkedList_typeId
integer array LLEntry_nextFree
integer LLEntry_firstFree
integer LLEntry_maxIndex
integer array LLEntry_typeId
integer array LLIterator_nextFree
integer LLIterator_firstFree
integer LLIterator_maxIndex
integer array LLIterator_typeId
integer LinkedListPredicate_firstFree
integer LinkedListPredicate_maxIndex
integer LinkedListUpdater_firstFree
integer LinkedListUpdater_maxIndex
integer array Table_nextFree
integer Table_firstFree
integer Table_maxIndex
integer array Table_typeId
integer StringIterator_firstFree
integer StringIterator_maxIndex
integer StringLines_firstFree
integer StringLines_maxIndex
integer ForceIterator_firstFree
integer ForceIterator_maxIndex
integer array W3UDefinition_nextFree
integer W3UDefinition_firstFree
integer W3UDefinition_maxIndex
integer array W3UDefinition_typeId
integer array AbilityDefinition_nextFree
integer AbilityDefinition_firstFree
integer AbilityDefinition_maxIndex
integer array AbilityDefinition_typeId
integer array BonusType_nextFree
integer BonusType_firstFree
integer BonusType_maxIndex
integer array BonusType_typeId
integer array StatChangedEvent_nextFree
integer StatChangedEvent_firstFree
integer StatChangedEvent_maxIndex
integer array StatChangedEvent_typeId
integer array HashMap_nextFree
integer HashMap_firstFree
integer HashMap_maxIndex
integer array HashMap_typeId
integer array StatEntity_nextFree
integer StatEntity_firstFree
integer StatEntity_maxIndex
integer array StatEntity_typeId
integer array StatList_nextFree
integer StatList_firstFree
integer StatList_maxIndex
integer array StatList_typeId
integer array StatListIterator_nextFree
integer StatListIterator_firstFree
integer StatListIterator_maxIndex
integer array StatListIterator_typeId
integer array UnitBaseStatBuffer_nextFree
integer UnitBaseStatBuffer_firstFree
integer UnitBaseStatBuffer_maxIndex
integer array UnitBaseStatBuffer_typeId
integer array UnitStatBuffer_nextFree
integer UnitStatBuffer_firstFree
integer UnitStatBuffer_maxIndex
integer array UnitStatBuffer_typeId
integer array UnitTypeX_nextFree
integer UnitTypeX_firstFree
integer UnitTypeX_maxIndex
integer array UnitTypeX_typeId
integer Buff_firstFree
integer Buff_maxIndex
integer BuffList_firstFree
integer BuffList_maxIndex
integer array UnitX_nextFree
integer UnitX_firstFree
integer UnitX_maxIndex
integer array UnitX_typeId
integer array ThreatHandlerCamp_nextFree
integer ThreatHandlerCamp_firstFree
integer ThreatHandlerCamp_maxIndex
integer array ThreatHandlerCamp_typeId
integer array ThreatHandlerPU_nextFree
integer ThreatHandlerPU_firstFree
integer ThreatHandlerPU_maxIndex
integer array ThreatHandlerPU_typeId
integer array ThreatHandlerTU_nextFree
integer ThreatHandlerTU_firstFree
integer ThreatHandlerTU_maxIndex
integer array ThreatHandlerTU_typeId
integer array ThreatUnitIterator_nextFree
integer ThreatUnitIterator_firstFree
integer ThreatUnitIterator_maxIndex
integer array ThreatUnitIterator_typeId
integer array ThreatListEntry_nextFree
integer ThreatListEntry_firstFree
integer ThreatListEntry_maxIndex
integer array ThreatListEntry_typeId
integer array UnitDamageHandler_nextFree
integer UnitDamageHandler_firstFree
integer UnitDamageHandler_maxIndex
integer array UnitDamageHandler_typeId
integer array ItemTypeX_nextFree
integer ItemTypeX_firstFree
integer ItemTypeX_maxIndex
integer array ItemTypeX_typeId
integer ItemX_firstFree
integer ItemX_maxIndex
integer array PlayerX_nextFree
integer PlayerX_firstFree
integer PlayerX_maxIndex
integer array PlayerX_typeId
real vec3_toVec2_return_x
real vec3_toVec2_return_y
real vec2_withZ_return_x
real vec2_withZ_return_y
real vec2_withZ_return_z
integer rational_op_mult_return_p
integer rational_op_mult_return_q
real unit_getPos_return_x
real unit_getPos_return_y
real unit_getPos3fake_return_x
real unit_getPos3fake_return_y
real unit_getPos3fake_return_z
texttag createTTExtempReturn
texttag createTTExtempReturn_2
unit ThreatHandlerTU_getFirstInThreatListtempReturn
unit dispatch_UnitX_getUnittempReturn
unit dispatch_ThreatHandlerTU_getFirstInThreatListtempReturn
code ref_function_IssueHauntOrderAtLocBJFilter
code ref_function_EnumDestructablesInCircleBJFilter
code ref_function_GetUnitsInRectOfPlayerFilter
code ref_function_GetUnitsOfTypeIdAllFilter
code ref_function_GetUnitsOfPlayerAndTypeIdFilter
code ref_function_MeleeTrainedUnitIsHeroBJFilter
code ref_function_LivingPlayerUnitsOfTypeIdFilter
code ref_function_QueuedTriggerDoneBJ
code ref_function_SetDNCSoundsDawn
code ref_function_SetDNCSoundsDusk
code ref_function_SetDNCSoundsDay
code ref_function_SetDNCSoundsNight
code ref_function_StartStockUpdates
code ref_function_RemovePurchasedItem
code ref_function_MarkGameStarted
code ref_function_PerformStockUpdates
code ref_function_UpdateEachStockBuildingEnum
code ref_function_DelayedSuspendDecay
code ref_function_MeleeTriggerTournamentFinishSoon
code ref_function_MeleeTriggerTournamentFinishNow
code ref_function_MeleeTriggerActionConstructCancel
code ref_function_MeleeTriggerActionUnitDeath
code ref_function_MeleeTriggerActionUnitConstructionStart
code ref_function_MeleeTriggerActionPlayerDefeated
code ref_function_MeleeTriggerActionPlayerLeft
code ref_function_MeleeTriggerActionAllianceChange
code ref_function_MeleeTriggerActionPlayerLeft_2
code ref_function_MeleeTriggerActionAllianceChange_2
code ref_function_MeleeDoDrawEnum
code ref_function_MeleeDoDefeatEnum
code ref_function_MeleeDoVictoryEnum
code ref_function_MeleeDoDefeatEnum_2
code ref_function_MeleeDoVictoryEnum_2
code ref_function_MeleeCrippledPlayerTimeout
code ref_function_MeleeEnumFindNearestMine
code ref_function_MeleeClearExcessUnit
code ref_function_MeleeGrantItemsToTrainedHero
code ref_function_MeleeGrantItemsToHiredHero
code ref_function_SetPlayerColorBJEnum
code ref_function_TriggerActionUnitRescuedBJ
code ref_function_MakeUnitRescuableToForceBJEnum
code ref_function_FinishCinematicFadeBJ
code ref_function_ContinueCinematicFadeBJ
code ref_function_SetCineModeVolumeGroupsImmediateBJ
code ref_function_CancelCineSceneBJ
code ref_function_CustomDefeatRestartBJ
code ref_function_CustomDefeatReduceDifficultyBJ
code ref_function_CustomDefeatLoadBJ
code ref_function_CustomDefeatQuitBJ
code ref_function_CustomVictoryOkBJ
code ref_function_CustomVictoryQuitBJ
code ref_function_MakeUnitsPassiveForPlayerEnum
code ref_function_CountUnitsInGroupEnum
code ref_function_GetRandomSubGroupEnum
code ref_function_CountPlayersInForceEnum
code ref_function_GroupAddGroupEnum
code ref_function_ForcePickRandomPlayerEnum
code ref_function_GroupPickRandomUnitEnum
code ref_function_GroupRemoveGroupEnum
code ref_function_NearbyElevatorExistsEnum
code ref_function_FindElevatorWallBlockerEnum
code ref_function_NudgeUnitsInRectEnum
code ref_function_NudgeItemsInRectEnum
code ref_function_RandomDestructableInRectBJEnum
code ref_function_PauseAllUnitsBJEnum
code ref_function_WakePlayerUnitsEnum
code ref_function_IsUnitGroupInRectBJEnum
code ref_function_IsUnitGroupEmptyBJEnum
code ref_function_IsUnitGroupDeadBJEnum
code ref_function_SelectGroupBJEnum
code ref_function_SelectGroupBJEnum_2
code ref_function_DelayedSuspendDecayStopAnimEnum
code ref_function_DelayedSuspendDecayStopAnimEnum_2
code ref_function_DelayedSuspendDecayFleshEnum
code ref_function_DelayedSuspendDecayBoneEnum
code ref_function_DelayedSuspendDecayStopAnimEnum_3
code ref_function_GetLastCreatedGroupEnum
code ref_function_RandomItemInRectBJEnum
code ref_function_VolumeGroupResetImmediateBJ
code ref_function_SetSpeechVolumeGroupsImmediateBJ
code ref_function_RegisterDestDeathInRegionEnum
code ref_function_hideItem
code ref_function_resetCam
code ref_function_resetCam_2
code ref_function_resetCam_3
code ref_function_ForceIterator_callback
code ref_function_GroupAddGroupEnum_2
code ref_function_acquireTarget
code ref_function_closure_impl
code ref_function_switchDebug
code ref_function_closure_impl_2
code ref_function_closure_impl_3
code ref_function_closure_impl_4
code ref_function_update
code ref_function_UnitDamageHandler_unitAttacked
code ref_function_closure_impl_5
code ref_function_closure_impl_6
endglobals
function ForceIterator_callback takes nothing returns nothing
	call GetEnumPlayer()
	set ForceIterator_tempIndex = ForceIterator_tempIndex + 1
endfunction

function gcd takes integer p, integer q returns integer
	local integer a = p
	local integer b = q
	local integer h
	loop
		exitwhen  not (b != 0)
		set h = ModuloInteger(a, b)
		set a = b
		set b = h
	endloop
	return a
endfunction

function rational_op_mult takes integer this_p, integer this_q, integer r_p, integer r_q returns integer
	local integer gcd1 = gcd(this_p, r_q)
	local integer gcd2 = gcd(this_q, r_p)
	set rational_op_mult_return_p = this_p / gcd1 * (r_p / gcd2)
	set rational_op_mult_return_q = this_q / gcd2 * (r_q / gcd1)
	return rational_op_mult_return_p
endfunction

function rational_toInt takes integer this_p, integer this_q returns integer
	return this_p / this_q
endfunction

function UnitStatBuffer_getStatRecalc takes integer this, integer statId returns integer
	local integer result = 0
	local integer temp = StatHandler_statType[statId]
	local integer tempIndex
	local integer tempIndex_2
	if temp == 0 then
		set result = UnitStatBuffer_statsAbs[UnitStatBuffer_arrayStart[this] + statId]
	elseif temp == 1 then
		set tempIndex = UnitStatBuffer_arrayStart[this] + statId
		set result = rational_toInt(rational_op_mult(UnitStatBuffer_statsPerc[tempIndex], UnitStatBuffer_statsPerc_2[tempIndex], 100, 1), rational_op_mult_return_q) - 100
	elseif temp == 2 then
		set tempIndex_2 = UnitStatBuffer_arrayStart[this] + statId
		set result = 100 - rational_toInt(rational_op_mult(UnitStatBuffer_statsPerc[tempIndex_2], UnitStatBuffer_statsPerc_2[tempIndex_2], 100, 1), rational_op_mult_return_q)
	endif
	if StatHandler_statSubstat[statId] != -1 then
		set result = result * (100 + UnitStatBuffer_getStatRecalc(this, StatHandler_statSubstat[statId])) / 100
	endif
	return result
endfunction

function dispatch_UnitStatBuffer_getStatRecalc takes integer this, integer statId returns integer
	local integer getStatRecalc_result
	if UnitStatBuffer_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitStatBuffer.getStatRecalc")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitStatBuffer.getStatRecalc on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getStatRecalc_result = UnitStatBuffer_getStatRecalc(this, statId)
	return getStatRecalc_result
endfunction

function UnitStatBuffer_get takes integer this, integer s returns integer
	local integer result = 0
	if UnitStatBuffer_cacheDirty[UnitStatBuffer_arrayStart[this] + s] then
		set result = dispatch_UnitStatBuffer_getStatRecalc(this, s)
		set UnitStatBuffer_cache[UnitStatBuffer_arrayStart[this] + s] = result
		set UnitStatBuffer_cacheDirty[UnitStatBuffer_arrayStart[this] + s] = false
	else
		set result = UnitStatBuffer_cache[UnitStatBuffer_arrayStart[this] + s]
	endif
	return result
endfunction

function dispatch_UnitStatBuffer_get takes integer this, integer s returns integer
	local integer get_result
	if UnitStatBuffer_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitStatBuffer.get")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitStatBuffer.get on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set get_result = UnitStatBuffer_get(this, s)
	return get_result
endfunction

function texttag_setColor takes texttag this, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetTextTagColor(this, col_red, col_green, col_blue, col_alpha)
endfunction

function texttag_setFadepoint takes texttag this, real fadepoint returns nothing
	call SetTextTagFadepoint(this, fadepoint)
endfunction

function texttag_setLifespan takes texttag this, real span returns nothing
	call SetTextTagLifespan(this, span)
endfunction

function texttag_setPermanent takes texttag this, boolean flag returns nothing
	call SetTextTagPermanent(this, flag)
endfunction

function texttag_setPos takes texttag this, real pos_x, real pos_y, real pos_z returns nothing
	call SetTextTagPos(this, pos_x, pos_y, pos_z)
endfunction

function texttag_setText takes texttag this, string text, real size returns nothing
	call SetTextTagText(this, text, size * 0.0023)
endfunction

function texttag_setVelocity takes texttag this, real xvel, real yvel returns nothing
	call SetTextTagVelocity(this, xvel, yvel)
endfunction

function vec2_withZ takes real this_x, real this_y, real z returns real
	set vec2_withZ_return_x = this_x
	set vec2_withZ_return_y = this_y
	set vec2_withZ_return_z = z
	return vec2_withZ_return_x
endfunction

function vec3_toVec2 takes real this_x, real this_y, real this_z returns real
	set vec3_toVec2_return_x = this_x
	set vec3_toVec2_return_y = this_y
	return vec3_toVec2_return_x
endfunction

function createTTEx takes real pos_x, real pos_y, real pos_z, real vel_x, real vel_y, string message, real size, real duration, integer col_red, integer col_green, integer col_blue, integer col_alpha returns texttag
	local texttag receiver = CreateTextTag()
	local texttag receiver_2
	local texttag receiver_3
	local texttag receiver_4
	local texttag receiver_5
	local texttag receiver_6
	local texttag receiver_7
	call texttag_setPos(receiver, vec2_withZ(vec3_toVec2(pos_x, pos_y, pos_z), vec3_toVec2_return_y, 20.), vec2_withZ_return_y, vec2_withZ_return_z)
	set receiver_2 = receiver
	call texttag_setText(receiver_2, message, size)
	set receiver_3 = receiver_2
	call texttag_setColor(receiver_3, col_red, col_green, col_blue, col_alpha)
	set receiver_4 = receiver_3
	call texttag_setVelocity(receiver_4, vel_x, vel_y)
	set receiver_5 = receiver_4
	call texttag_setLifespan(receiver_5, duration)
	set receiver_6 = receiver_5
	call texttag_setFadepoint(receiver_6, .1)
	set receiver_7 = receiver_6
	call texttag_setPermanent(receiver_7, false)
	set createTTExtempReturn = receiver_7
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
	set receiver_6 = null
	set receiver_7 = null
	return createTTExtempReturn
endfunction

function texttag_setVisibility takes texttag this, boolean flag returns nothing
	call SetTextTagVisibility(this, flag)
endfunction

function createTTEx_2 takes real pos_x, real pos_y, real pos_z, real vel_x, real vel_y, string message, real size, real duration, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p returns texttag
	local texttag receiver = createTTEx(pos_x, pos_y, pos_z, vel_x, vel_y, message, size, duration, col_red, col_green, col_blue, col_alpha)
	call texttag_setVisibility(receiver, GetLocalPlayer() == p)
	set createTTExtempReturn_2 = receiver
	set receiver = null
	return createTTExtempReturn_2
endfunction

function int_toString takes integer this returns string
	return I2S(this)
endfunction

function unit_getX takes unit this returns real
	return GetUnitX(this)
endfunction

function unit_getY takes unit this returns real
	return GetUnitY(this)
endfunction

function unit_getPos3fake takes unit this returns real
	set unit_getPos3fake_return_x = unit_getX(this)
	set unit_getPos3fake_return_y = unit_getY(this)
	set unit_getPos3fake_return_z = 0.
	return unit_getPos3fake_return_x
endfunction

function combatTextCrit takes unit source, unit target, real dmg returns nothing
	local texttag receiver = createTTEx_2(unit_getPos3fake(target), unit_getPos3fake_return_y, unit_getPos3fake_return_z, GetRandomReal( - 0.02, 0.02), 0.04, int_toString(R2I(dmg)) + "!", 8., 1.2, 255, 0, 0, 255, GetOwningPlayer(source))
	local texttag receiver_2
	call texttag_setPermanent(receiver, false)
	set receiver_2 = receiver
	call texttag_setFadepoint(receiver_2, 0.6)
	set receiver = null
	set receiver_2 = null
endfunction

function combatTextDamage takes unit source, unit target, real dmg returns nothing
	local texttag receiver = createTTEx_2(unit_getPos3fake(target), unit_getPos3fake_return_y, unit_getPos3fake_return_z, GetRandomReal( - 0.02, 0.02), 0.04, int_toString(R2I(dmg)), 8., 1.2, 255, 255, 255, 255, GetOwningPlayer(source))
	local texttag receiver_2
	call texttag_setPermanent(receiver, false)
	set receiver_2 = receiver
	call texttag_setFadepoint(receiver_2, 0.6)
	set receiver = null
	set receiver_2 = null
endfunction

function combatTextEvade takes unit source, unit target returns nothing
	local texttag receiver = createTTEx_2(unit_getPos3fake(target), unit_getPos3fake_return_y, unit_getPos3fake_return_z, GetRandomReal( - 0.02, 0.02), 0.04, "dodge", 8., 1.2, 255, 255, 255, 255, GetOwningPlayer(source))
	local texttag receiver_2
	call texttag_setPermanent(receiver, false)
	set receiver_2 = receiver
	call texttag_setFadepoint(receiver_2, 0.6)
	set receiver = null
	set receiver_2 = null
endfunction

function ThreatHandlerCamp_addIncombatList takes integer this returns nothing
	if ThreatHandlerCamp_icListId[this] == 0 then
		set ThreatHandler_icListLast = ThreatHandler_icListLast + 1
		set ThreatHandlerCamp_icListId[this] = ThreatHandler_icListLast
		set ThreatHandler_icList[ThreatHandler_icListLast] = this
	endif
endfunction

function dispatch_ThreatHandlerCamp_addIncombatList takes integer this returns nothing
	if ThreatHandlerCamp_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerCamp.addIncombatList")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerCamp.addIncombatList on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerCamp_addIncombatList(this)
endfunction

function ThreatHandlerTU_remove takes integer this, integer e returns nothing
	set ThreatListEntry_tuPrev[ThreatListEntry_tuNext[e]] = ThreatListEntry_tuPrev[e]
	set ThreatListEntry_tuNext[ThreatListEntry_tuPrev[e]] = ThreatListEntry_tuNext[e]
endfunction

function dispatch_ThreatHandlerTU_remove takes integer this, integer e returns nothing
	if ThreatHandlerTU_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerTU.remove")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerTU.remove on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerTU_remove(this, e)
endfunction

function ThreatHandlerTU_sort takes integer this, integer e, boolean increased returns nothing
	local integer t
	local integer t_2
	if increased then
		if ThreatListEntry_threat[e] > ThreatListEntry_threat[ThreatListEntry_tuPrev[e]] then
			set t = ThreatListEntry_tuPrev[e]
			loop
				exitwhen  not (ThreatListEntry_threat[e] > ThreatListEntry_threat[t])
				set t = ThreatListEntry_tuPrev[t]
			endloop
			call dispatch_ThreatHandlerTU_remove(this, e)
			set ThreatListEntry_tuPrev[ThreatListEntry_tuNext[t]] = e
			set ThreatListEntry_tuNext[e] = ThreatListEntry_tuNext[t]
			set ThreatListEntry_tuNext[t] = e
			set ThreatListEntry_tuPrev[e] = t
		endif
	elseif ThreatListEntry_threat[e] < ThreatListEntry_threat[ThreatListEntry_tuNext[e]] then
		set t_2 = ThreatListEntry_tuNext[e]
		loop
			exitwhen  not (ThreatListEntry_threat[e] < ThreatListEntry_threat[t_2])
			set t_2 = ThreatListEntry_tuNext[t_2]
		endloop
		call dispatch_ThreatHandlerTU_remove(this, e)
		set ThreatListEntry_tuNext[ThreatListEntry_tuPrev[t_2]] = e
		set ThreatListEntry_tuPrev[e] = ThreatListEntry_tuPrev[t_2]
		set ThreatListEntry_tuPrev[t_2] = e
		set ThreatListEntry_tuNext[e] = t_2
	endif
endfunction

function dispatch_ThreatHandlerTU_sort takes integer this, integer e, boolean increased returns nothing
	if ThreatHandlerTU_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerTU.sort")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerTU.sort on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerTU_sort(this, e, increased)
endfunction

function ThreatListEntry_setThreat takes integer this, real newThreat returns nothing
	local boolean increased = newThreat > ThreatListEntry_threat[this]
	set ThreatListEntry_threat[this] = newThreat
	call dispatch_ThreatHandlerTU_sort(ThreatListEntry_tu[this], this, increased)
endfunction

function dispatch_ThreatListEntry_setThreat takes integer this, real newThreat returns nothing
	if ThreatListEntry_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatListEntry.setThreat")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatListEntry.setThreat on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatListEntry_setThreat(this, newThreat)
endfunction

function HeroUnitX_getThreatHandlerPU takes integer this returns integer
	return HeroUnitX_pu[this]
endfunction

function dispatch_HeroUnitX_getThreatHandlerPU takes integer this returns integer
	local integer getThreatHandlerPU_result
	if UnitX_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroUnitX.getThreatHandlerPU")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroUnitX.getThreatHandlerPU on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getThreatHandlerPU_result = HeroUnitX_getThreatHandlerPU(this)
	return getThreatHandlerPU_result
endfunction

function unit_getUserData takes unit this returns integer
	return GetUnitUserData(this)
endfunction

function unit_getUnitX takes unit this returns integer
	return unit_getUserData(this)
endfunction

function getPlayerUnit takes unit u returns integer
	local integer pu = 0
	if UnitX_typeId[unit_getUnitX(u)] == 665 then
		set pu = dispatch_HeroUnitX_getThreatHandlerPU(unit_getUnitX(u))
	endif
	return pu
endfunction

function CreepUnitX_getThreatHandlerTU takes integer this returns integer
	return CreepUnitX_tu[this]
endfunction

function dispatch_CreepUnitX_getThreatHandlerTU takes integer this returns integer
	local integer getThreatHandlerTU_result
	if UnitX_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling CreepUnitX.getThreatHandlerTU")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called CreepUnitX.getThreatHandlerTU on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getThreatHandlerTU_result = CreepUnitX_getThreatHandlerTU(this)
	return getThreatHandlerTU_result
endfunction

function getThreatUnit takes unit u returns integer
	local integer tu = 0
	if UnitX_typeId[unit_getUnitX(u)] == 671 then
		set tu = dispatch_CreepUnitX_getThreatHandlerTU(unit_getUnitX(u))
	endif
	return tu
endfunction

function hashtable_loadInt takes hashtable this, integer parentKey, integer childKey returns integer
	return LoadInteger(this, parentKey, childKey)
endfunction

function alloc_ThreatListEntry takes nothing returns integer
	local integer this
	if ThreatListEntry_firstFree == 0 then
		set ThreatListEntry_maxIndex = ThreatListEntry_maxIndex + 1
		set this = ThreatListEntry_maxIndex
	else
		set ThreatListEntry_firstFree = ThreatListEntry_firstFree - 1
		set this = ThreatListEntry_nextFree[ThreatListEntry_firstFree]
	endif
	set ThreatListEntry_typeId[this] = 670
	return this
endfunction

function ThreatHandlerPU_add takes integer this, integer e returns nothing
	set ThreatListEntry_puPrev[e] = ThreatListEntry_puPrev[ThreatHandlerPU_dummy[this]]
	set ThreatListEntry_puNext[e] = ThreatHandlerPU_dummy[this]
	set ThreatListEntry_puNext[ThreatListEntry_puPrev[ThreatHandlerPU_dummy[this]]] = e
	set ThreatListEntry_puPrev[ThreatHandlerPU_dummy[this]] = e
endfunction

function dispatch_ThreatHandlerPU_add takes integer this, integer e returns nothing
	if ThreatHandlerPU_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerPU.add")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerPU.add on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerPU_add(this, e)
endfunction

function ThreatHandlerTU_add takes integer this, integer e returns nothing
	local integer t = ThreatListEntry_tuPrev[ThreatHandlerTU_dummy[this]]
	loop
		exitwhen  not (ThreatListEntry_threat[e] > ThreatListEntry_threat[t])
		set t = ThreatListEntry_tuPrev[t]
	endloop
	set ThreatListEntry_tuPrev[ThreatListEntry_tuNext[t]] = e
	set ThreatListEntry_tuNext[e] = ThreatListEntry_tuNext[t]
	set ThreatListEntry_tuNext[t] = e
	set ThreatListEntry_tuPrev[e] = t
endfunction

function dispatch_ThreatHandlerTU_add takes integer this, integer e returns nothing
	if ThreatHandlerTU_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerTU.add")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerTU.add on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerTU_add(this, e)
endfunction

function hashtable_saveInt takes hashtable this, integer parentKey, integer childKey, integer value returns nothing
	call SaveInteger(this, parentKey, childKey, value)
endfunction

function construct_ThreatListEntry takes integer this, integer pu, integer tu, real threat returns nothing
	set ThreatListEntry_pu[this] = pu
	set ThreatListEntry_tu[this] = tu
	set ThreatListEntry_threat[this] = threat
	call dispatch_ThreatHandlerPU_add(pu, this)
	call dispatch_ThreatHandlerTU_add(tu, this)
	call hashtable_saveInt(ThreatHandler_ht, pu, tu, this)
endfunction

function new_ThreatListEntry takes integer pu, integer tu, real threat returns integer
	local integer this = alloc_ThreatListEntry()
	call construct_ThreatListEntry(this, pu, tu, threat)
	return this
endfunction

function unit_getTypeId takes unit this returns integer
	return GetUnitTypeId(this)
endfunction

function modifyThreat takes unit playerUnit, unit threatUnit, real value, boolean add returns nothing
	local integer pu = getPlayerUnit(playerUnit)
	local integer tu = getThreatUnit(threatUnit)
	local real newValue = value
	local integer e
	local integer campUnit
	if pu == 0 or tu == 0 then
		return
	endif
	if IsUnitType(playerUnit, UNIT_TYPE_DEAD) or IsUnitType(threatUnit, UNIT_TYPE_DEAD) or unit_getTypeId(playerUnit) == 0 or unit_getTypeId(threatUnit) == 0 then
		return
	endif
	if ThreatHandlerTU_state[tu] == 2 or ThreatHandlerTU_state[tu] == 3 then
		return
	endif
	if HaveSavedInteger(ThreatHandler_ht, pu, tu) then
		set e = hashtable_loadInt(ThreatHandler_ht, pu, tu)
		if add then
			set newValue = ThreatListEntry_threat[e] + value
		endif
		if newValue < 0. then
			set newValue = 0.
		endif
		call dispatch_ThreatListEntry_setThreat(e, newValue)
	else
		if value < 0. then
			set newValue = 0.
		endif
		call dispatch_ThreatHandlerCamp_addIncombatList(ThreatHandlerTU_camp[tu])
		set ThreatHandlerCamp_state[ThreatHandlerTU_camp[tu]] = 1
		set e = new_ThreatListEntry(pu, tu, newValue)
		set campUnit = ThreatHandlerCamp_dummy[ThreatHandlerTU_camp[tu]]
		loop
			exitwhen  not (ThreatHandlerTU_campNext[campUnit] != ThreatHandlerCamp_dummy[ThreatHandlerTU_camp[tu]])
			set campUnit = ThreatHandlerTU_campNext[campUnit]
			set ThreatHandlerTU_state[campUnit] = 1
			if campUnit != tu then
				set e = new_ThreatListEntry(pu, campUnit, 0.)
			endif
		endloop
	endif
endfunction

function unit_getState takes unit this, unitstate state returns real
	return GetUnitState(this, state)
endfunction

function unit_getHP takes unit this returns real
	return unit_getState(this, UNIT_STATE_LIFE)
endfunction

function getUnitIndex takes unit u returns integer
	return unit_getUserData(u)
endfunction

function printWarning takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, "|cffFF8000[WARNING]|r - " + msg)
endfunction

function unit_getStat takes unit this, integer s returns integer
	local integer buffer = StatHandler_mapUnitStatBuffers[getUnitIndex(this)]
	if buffer == 0 then
		call printWarning("StatHandlerConfig: A called function requires a valid implementation of getUnitIndex(unit u).")
	endif
	return dispatch_UnitStatBuffer_get(buffer, s)
endfunction

function unit_setState takes unit this, unitstate state, real value returns nothing
	call SetUnitState(this, state, value)
endfunction

function unit_setHP takes unit this, real hp returns nothing
	call unit_setState(this, UNIT_STATE_LIFE, hp)
endfunction

function unitDamageTarget takes unit source, unit target, real damage, integer damageType, boolean isAttack returns nothing
	local boolean isCrit = false
	local real dmg = damage
	local integer temp
	if isAttack then
		if GetRandomInt(0, 99) < unit_getStat(target, 12) then
			call combatTextEvade(source, target)
			return
		endif
		if GetRandomInt(0, 99) < unit_getStat(source, 13) then
			set isCrit = true
			set dmg = dmg * (1. + unit_getStat(source, 14) * 0.01) + unit_getStat(source, 15)
		endif
	endif
	set temp = damageType
	if temp == 0 then
		set dmg = dmg - unit_getStat(target, 9)
	elseif temp == 1 then
		set dmg = dmg - unit_getStat(target, 9)
	elseif temp == 2 then
		set dmg = dmg - unit_getStat(target, 9)
	elseif temp == 3 then
	elseif temp == 4 then
	endif
	if dmg > 0. then
		call unit_setHP(target, unit_getHP(target) - dmg)
		if UnitX_typeId[unit_getUnitX(target)] == 671 then
			call modifyThreat(source, target, dmg, true)
		endif
	endif
	if isCrit then
		call combatTextCrit(source, target, dmg)
	else
		call combatTextDamage(source, target, dmg)
	endif
endfunction

function UnitDamageHandler_unitAttacked takes nothing returns nothing
	local unit source = GetEventDamageSource()
	local integer unitX = unit_getUnitX(source)
	local integer damageType = UnitDamageHandler_damageType[UnitX_unitDamageHandler[unitX]]
	local real damage = 1. * dispatch_UnitStatBuffer_get(UnitX_unitStatBuffer[unitX], 7)
	call unitDamageTarget(source, GetTriggerUnit(), damage, damageType, true)
	set source = null
endfunction

function acquireTarget takes nothing returns nothing
	local unit tu = GetTriggerUnit()
	local unit pu
	if GetEventTargetUnit() != null then
		set pu = GetEventTargetUnit()
	else
		set pu = GetOrderTargetUnit()
	endif
	if IsUnitEnemy(pu, GetOwningPlayer(tu)) then
		if ThreatHandlerTU_state[getThreatUnit(tu)] == 0 then
			call modifyThreat(pu, tu, 0., true)
		endif
	endif
	set tu = null
	set pu = null
endfunction

function HashMap_get takes integer this, integer key returns integer
	return hashtable_loadInt(HashMap_ht, this, key)
endfunction

function dispatch_HashMap_get takes integer this, integer key returns integer
	local integer get_result
	if HashMap_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HashMap.get")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HashMap.get on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set get_result = HashMap_get(this, key)
	return get_result
endfunction

function getDummyMorphAbility takes integer dummyRaw returns integer
	return dispatch_HashMap_get(HeroDummyGen_morphAbilities, dummyRaw)
endfunction

function getDummyUnmorphAbility takes integer dummyRaw returns integer
	return dispatch_HashMap_get(HeroDummyGen_unmorphAbilities, dummyRaw)
endfunction

function getHeroDummyId takes integer eqClass, integer dmgType returns integer
	return hashtable_loadInt(HeroDummyGen_map, eqClass, dmgType)
endfunction

function unit_addAbility takes unit this, integer abil returns nothing
	call UnitAddAbility(this, abil)
endfunction

function unit_removeAbility takes unit this, integer abil returns nothing
	call UnitRemoveAbility(this, abil)
endfunction

function changeHeroDummy takes unit u, integer eqClass, integer dmgType returns nothing
	local integer currentUnitRaw = GetUnitTypeId(u)
	local integer newUnitRaw = getHeroDummyId(eqClass, dmgType)
	local integer unmorph
	local integer morph
	if currentUnitRaw != newUnitRaw then
		set unmorph = getDummyUnmorphAbility(currentUnitRaw)
		set morph = getDummyMorphAbility(newUnitRaw)
		call unit_addAbility(u, unmorph)
		call unit_removeAbility(u, unmorph)
		call unit_addAbility(u, morph)
		call unit_removeAbility(u, morph)
	endif
endfunction

function HeroUnitX_changeDummy takes integer this, integer eqClass, integer dmgType returns nothing
	call changeHeroDummy(UnitX_u[this], eqClass, dmgType)
endfunction

function dispatch_HeroUnitX_changeDummy takes integer this, integer eqClass, integer dmgType returns nothing
	if UnitX_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroUnitX.changeDummy")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroUnitX.changeDummy on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroUnitX_changeDummy(this, eqClass, dmgType)
endfunction

function closure_impl takes nothing returns nothing
	call dispatch_HeroUnitX_changeDummy(Maptest_hero, 1, 1)
endfunction

function print takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, msg)
endfunction

function closure_impl_2 takes nothing returns nothing
	call print("Testutils commands:")
	call print("  -testutils smartcoords (toggles smart coords)")
endfunction

function real_toString takes real this returns string
	return R2S(this)
endfunction

function closure_impl_3 takes nothing returns nothing
	if GetIssuedOrderId() == 851971 then
		call print("Coordinates: " + real_toString(GetOrderPointX()) + " / " + real_toString(GetOrderPointY()))
		call TriggerSleepAction(0.01)
		call IssueImmediateOrder(GetTriggerUnit(), "stop")
	endif
endfunction

function closure_impl_4 takes nothing returns boolean
	return ThreatHandlerTU_u[getThreatUnit(GetFilterUnit())] != null and ( not IsUnitType(GetFilterUnit(), UNIT_TYPE_DEAD)) and ThreatHandlerTU_state[getThreatUnit(GetFilterUnit())] == 0
endfunction

function trigger_disable takes trigger this returns nothing
	call DisableTrigger(this)
endfunction

function trigger_enable takes trigger this returns nothing
	call EnableTrigger(this)
endfunction

function closure_impl_5 takes nothing returns nothing
	if IsTriggerEnabled(TestUtils_smartCoordsTrigger) then
		call trigger_disable(TestUtils_smartCoordsTrigger)
		call print("Testutils: Smart Coords disabled")
	else
		call trigger_enable(TestUtils_smartCoordsTrigger)
		call print("Testutils: Smart Coords enabled")
	endif
endfunction

function closure_impl_6 takes nothing returns nothing
	call dispatch_HeroUnitX_changeDummy(Maptest_hero, 6, 2)
endfunction

function hideItem takes nothing returns nothing
	if IsItemVisible(GetEnumItem()) then
		set Terrain_hid[Terrain_hidMax] = GetEnumItem()
		call SetItemVisible(Terrain_hid[Terrain_hidMax], false)
		set Terrain_hidMax = Terrain_hidMax + 1
	endif
endfunction

function Table_loadInt takes integer this, integer parentKey returns integer
	return hashtable_loadInt(Table_ht, this, parentKey)
endfunction

function dispatch_Table_loadInt takes integer this, integer parentKey returns integer
	local integer loadInt_result
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.loadInt")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.loadInt on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set loadInt_result = Table_loadInt(this, parentKey)
	return loadInt_result
endfunction

function timer_getData takes timer this returns integer
	return dispatch_Table_loadInt(TimerUtils_timerData, GetHandleId(this))
endfunction

function timer_pause takes timer this returns nothing
	call PauseTimer(this)
endfunction

function Table_saveInt takes integer this, integer parentKey, integer value returns nothing
	call hashtable_saveInt(Table_ht, this, parentKey, value)
endfunction

function dispatch_Table_saveInt takes integer this, integer parentKey, integer value returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.saveInt")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.saveInt on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_saveInt(this, parentKey, value)
endfunction

function timer_setData takes timer this, integer data returns nothing
	call dispatch_Table_saveInt(TimerUtils_timerData, GetHandleId(this), data)
endfunction

function timer_release takes timer this returns nothing
	if this == null then
		call BJDebugMsg("Trying to release a null timer")
		call I2S(1 / 0)
		return
	endif
	if timer_getData(this) == TimerUtils_HELD then
		call BJDebugMsg("ReleaseTimer: Double free!")
		call I2S(1 / 0)
		return
	endif
	call timer_setData(this, TimerUtils_HELD)
	call timer_pause(this)
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function resetCam takes nothing returns nothing
	local timer t = GetExpiredTimer()
	call CameraClearNoiseForPlayer(Player(timer_getData(t)))
	call timer_release(t)
	set t = null
endfunction

function player_getId takes player this returns integer
	return GetPlayerId(this)
endfunction

function switchDebug takes nothing returns nothing
	local player p = GetTriggerPlayer()
	local integer id = player_getId(p)
	if PrintingHelper_wantDebug[id] then
		set PrintingHelper_wantDebug[id] = false
		call DisplayTimedTextToPlayer(p, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cffB55208deactivated")
	else
		set PrintingHelper_wantDebug[id] = true
		call DisplayTimedTextToPlayer(p, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cff3AAD42activated")
	endif
	set p = null
endfunction

function ThreatHandlerCamp_removeIncombatList takes integer this returns nothing
	if ThreatHandlerCamp_icListId[this] != 0 then
		set ThreatHandler_icList[ThreatHandlerCamp_icListId[this]] = ThreatHandler_icList[ThreatHandler_icListLast]
		set ThreatHandler_icListLast = ThreatHandler_icListLast - 1
		set ThreatHandlerCamp_icListId[this] = 0
	endif
endfunction

function dispatch_ThreatHandlerCamp_removeIncombatList takes integer this returns nothing
	if ThreatHandlerCamp_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerCamp.removeIncombatList")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerCamp.removeIncombatList on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerCamp_removeIncombatList(this)
endfunction

function unit_unpause takes unit this returns nothing
	call PauseUnit(this, false)
endfunction

function ThreatHandlerCamp_checkReturned takes integer this returns nothing
	local boolean ret = true
	local integer campUnit = ThreatHandlerCamp_dummy[this]
	loop
		exitwhen  not (ThreatHandlerTU_campNext[campUnit] != ThreatHandlerCamp_dummy[this])
		set campUnit = ThreatHandlerTU_campNext[campUnit]
		if ThreatHandlerTU_state[campUnit] != 3 then
			set ret = false
			exitwhen true
		endif
	endloop
	if ret then
		set ThreatHandlerCamp_state[this] = 0
		call dispatch_ThreatHandlerCamp_removeIncombatList(this)
		set campUnit = ThreatHandlerCamp_dummy[this]
		loop
			exitwhen  not (ThreatHandlerTU_campNext[campUnit] != ThreatHandlerCamp_dummy[this])
			set campUnit = ThreatHandlerTU_campNext[campUnit]
			set ThreatHandlerTU_state[campUnit] = 0
			call SetUnitInvulnerable(ThreatHandlerTU_u[campUnit], false)
			call unit_unpause(ThreatHandlerTU_u[campUnit])
		endloop
	endif
endfunction

function dispatch_ThreatHandlerCamp_checkReturned takes integer this returns nothing
	if ThreatHandlerCamp_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerCamp.checkReturned")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerCamp.checkReturned on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerCamp_checkReturned(this)
endfunction

function alloc_ThreatUnitIterator takes nothing returns integer
	local integer this
	if ThreatUnitIterator_firstFree == 0 then
		set ThreatUnitIterator_maxIndex = ThreatUnitIterator_maxIndex + 1
		set this = ThreatUnitIterator_maxIndex
	else
		set ThreatUnitIterator_firstFree = ThreatUnitIterator_firstFree - 1
		set this = ThreatUnitIterator_nextFree[ThreatUnitIterator_firstFree]
	endif
	set ThreatUnitIterator_typeId[this] = 669
	return this
endfunction

function construct_ThreatUnitIterator takes integer this, integer tu returns nothing
	set ThreatUnitIterator_tu[this] = tu
	set ThreatUnitIterator_current[this] = ThreatHandlerTU_dummy[tu]
endfunction

function new_ThreatUnitIterator takes integer tu returns integer
	local integer this = alloc_ThreatUnitIterator()
	call construct_ThreatUnitIterator(this, tu)
	return this
endfunction

function ThreatHandlerTU_iterator takes integer this returns integer
	return new_ThreatUnitIterator(this)
endfunction

function dispatch_ThreatHandlerTU_iterator takes integer this returns integer
	local integer iterator_result
	if ThreatHandlerTU_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerTU.iterator")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerTU.iterator on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = ThreatHandlerTU_iterator(this)
	return iterator_result
endfunction

function ThreatHandlerPU_remove takes integer this, integer e returns nothing
	set ThreatListEntry_puPrev[ThreatListEntry_puNext[e]] = ThreatListEntry_puPrev[e]
	set ThreatListEntry_puNext[ThreatListEntry_puPrev[e]] = ThreatListEntry_puNext[e]
endfunction

function dispatch_ThreatHandlerPU_remove takes integer this, integer e returns nothing
	if ThreatHandlerPU_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerPU.remove")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerPU.remove on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerPU_remove(this, e)
endfunction

function ThreatListEntry_onDestroy takes integer this returns nothing
	if ThreatListEntry_pu[this] != 0 then
		call dispatch_ThreatHandlerPU_remove(ThreatListEntry_pu[this], this)
		call dispatch_ThreatHandlerTU_remove(ThreatListEntry_tu[this], this)
		call RemoveSavedInteger(ThreatHandler_ht, ThreatListEntry_pu[this], ThreatListEntry_tu[this])
	endif
endfunction

function dealloc_ThreatListEntry takes integer obj returns nothing
	if ThreatListEntry_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type ThreatListEntry")
		call I2S(1 / 0)
	else
		set ThreatListEntry_nextFree[ThreatListEntry_firstFree] = obj
		set ThreatListEntry_firstFree = ThreatListEntry_firstFree + 1
		set ThreatListEntry_typeId[obj] = 0
	endif
endfunction

function destroyThreatListEntry takes integer this returns nothing
	call ThreatListEntry_onDestroy(this)
	call dealloc_ThreatListEntry(this)
endfunction

function dispatch_ThreatListEntry_destroyThreatListEntry takes integer this returns nothing
	if ThreatListEntry_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatListEntry.destroyThreatListEntry")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatListEntry.destroyThreatListEntry on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyThreatListEntry(this)
endfunction

function ThreatUnitIterator_close takes integer this returns nothing
endfunction

function dispatch_ThreatUnitIterator_close takes integer this returns nothing
	if ThreatUnitIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatUnitIterator.close")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatUnitIterator.close on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatUnitIterator_close(this)
endfunction

function ThreatUnitIterator_hasNext takes integer this returns boolean
	return ThreatListEntry_tuNext[ThreatUnitIterator_current[this]] != ThreatHandlerTU_dummy[ThreatUnitIterator_tu[this]]
endfunction

function dispatch_ThreatUnitIterator_hasNext takes integer this returns boolean
	local boolean hasNext_result
	if ThreatUnitIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatUnitIterator.hasNext")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatUnitIterator.hasNext on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = ThreatUnitIterator_hasNext(this)
	return hasNext_result
endfunction

function ThreatUnitIterator_next takes integer this returns integer
	set ThreatUnitIterator_current[this] = ThreatListEntry_tuNext[ThreatUnitIterator_current[this]]
	return ThreatUnitIterator_current[this]
endfunction

function dispatch_ThreatUnitIterator_next takes integer this returns integer
	local integer next_result
	if ThreatUnitIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatUnitIterator.next")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatUnitIterator.next on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set next_result = ThreatUnitIterator_next(this)
	return next_result
endfunction

function unit_setMana takes unit this, real val returns nothing
	call unit_setState(this, UNIT_STATE_MANA, val)
endfunction

function onThreatUnitReturn takes unit u returns nothing
	call unit_setHP(u, unit_getState(u, UNIT_STATE_MAX_LIFE))
	call unit_setMana(u, unit_getState(u, UNIT_STATE_MAX_MANA))
endfunction

function unit_issueImmediateOrderById takes unit this, integer id returns nothing
	call IssueImmediateOrderById(this, id)
endfunction

function unit_issuePointOrder takes unit this, string order, real target_x, real target_y returns nothing
	call IssuePointOrder(this, order, target_x, target_y)
endfunction

function ThreatHandlerCamp_returnCamp takes integer this returns nothing
	local integer campUnit
	local integer wurst__iterator0
	local integer e
	local integer tempIndex
	local unit temp
	set ThreatHandlerCamp_state[this] = 2
	set ThreatHandlerCamp_timeToPortLeft[this] = ThreatHandlerConfig_TIME_TO_PORT * 2
	set campUnit = ThreatHandlerCamp_dummy[this]
	loop
		exitwhen  not (ThreatHandlerTU_campNext[campUnit] != ThreatHandlerCamp_dummy[this])
		set campUnit = ThreatHandlerTU_campNext[campUnit]
		set ThreatHandlerTU_state[campUnit] = 2
		set wurst__iterator0 = dispatch_ThreatHandlerTU_iterator(campUnit)
		loop
			exitwhen  not dispatch_ThreatUnitIterator_hasNext(wurst__iterator0)
			set e = dispatch_ThreatUnitIterator_next(wurst__iterator0)
			call dispatch_ThreatListEntry_destroyThreatListEntry(e)
		endloop
		call dispatch_ThreatUnitIterator_close(wurst__iterator0)
		call unit_issueImmediateOrderById(ThreatHandlerTU_u[campUnit], 851972)
		set temp = ThreatHandlerTU_u[campUnit]
		set tempIndex = campUnit
		call unit_issuePointOrder(temp, "move", ThreatHandlerTU_campPos[tempIndex], ThreatHandlerTU_campPos_2[tempIndex])
		call SetUnitInvulnerable(ThreatHandlerTU_u[campUnit], true)
		call onThreatUnitReturn(ThreatHandlerTU_u[campUnit])
	endloop
	set temp = null
endfunction

function dispatch_ThreatHandlerCamp_returnCamp takes integer this returns nothing
	if ThreatHandlerCamp_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerCamp.returnCamp")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerCamp.returnCamp on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerCamp_returnCamp(this)
endfunction

function ThreatHandlerTU_getFirstInThreatList takes integer this returns unit
	local unit ret = null
	if ThreatListEntry_tuNext[ThreatHandlerTU_dummy[this]] != ThreatHandlerTU_dummy[this] then
		set ret = ThreatHandlerPU_u[ThreatListEntry_pu[ThreatListEntry_tuNext[ThreatHandlerTU_dummy[this]]]]
	endif
	set ThreatHandlerTU_getFirstInThreatListtempReturn = ret
	set ret = null
	return ThreatHandlerTU_getFirstInThreatListtempReturn
endfunction

function dispatch_ThreatHandlerTU_getFirstInThreatList takes integer this returns unit
	local unit getFirstInThreatList_result
	if ThreatHandlerTU_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerTU.getFirstInThreatList")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerTU.getFirstInThreatList on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getFirstInThreatList_result = ThreatHandlerTU_getFirstInThreatList(this)
	set dispatch_ThreatHandlerTU_getFirstInThreatListtempReturn = getFirstInThreatList_result
	set getFirstInThreatList_result = null
	return dispatch_ThreatHandlerTU_getFirstInThreatListtempReturn
endfunction

function unit_issueTargetOrderById takes unit this, integer id, widget target returns nothing
	call IssueTargetOrderById(this, id, target)
endfunction

function unit_pause takes unit this returns nothing
	call PauseUnit(this, true)
endfunction

function unit_setPos takes unit this, real pos_x, real pos_y returns nothing
	call SetUnitPosition(this, pos_x, pos_y)
endfunction

function update takes nothing returns nothing
	local integer i = 1
	local integer temp = ThreatHandler_icListLast
	local unit u
	local integer camp
	local integer tu
	local unit target
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local integer tempIndex_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_2_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_2_2
	local real temp_tempTupleSelectionResult_1_4
	local real temp_tempTupleSelectionResult_2_4
	local integer tempIndex_5
	local real tempTupleSelectionResult_1_3
	local real temp_tempTupleSelectionResult_1_5
	local real temp_tempTupleSelectionResult_2_5
	local integer tempIndex_6
	local real tempTupleSelectionResult_2_3
	local real temp_tempTupleSelectionResult_1_6
	local real temp_tempTupleSelectionResult_2_6
	local integer tempIndex_7
	local integer tempIndex_8
	local unit temp_2
	local real temp_3
	local boolean andLeft
	local unit temp_4
	local real temp_5
	local boolean andLeft_2
	local unit temp_6
	local real temp_7
	local unit temp_8
	local unit temp_9
	loop
		exitwhen i > temp
		set camp = ThreatHandler_icList[i]
		if ThreatHandlerCamp_state[camp] == 1 then
			set tu = ThreatHandlerCamp_dummy[camp]
			loop
				exitwhen  not (ThreatHandlerTU_campNext[tu] != ThreatHandlerCamp_dummy[camp])
				set tu = ThreatHandlerTU_campNext[tu]
				set u = ThreatHandlerTU_u[tu]
				set target = dispatch_ThreatHandlerTU_getFirstInThreatList(tu)
				if target != null then
					set temp_2 = u
					set tempIndex = tu
					set temp_tempTupleSelectionResult_1 = ThreatHandlerTU_campPos[tempIndex]
					set temp_tempTupleSelectionResult_2 = ThreatHandlerTU_campPos_2[tempIndex]
					set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
					set temp_3 = tempTupleSelectionResult_1
					set tempIndex_2 = tu
					set temp_tempTupleSelectionResult_1_2 = ThreatHandlerTU_campPos[tempIndex_2]
					set temp_tempTupleSelectionResult_2_2 = ThreatHandlerTU_campPos_2[tempIndex_2]
					set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
					set andLeft = IsUnitInRangeXY(temp_2, temp_3, tempTupleSelectionResult_2, ThreatHandlerConfig_RETURN_RANGE)
				else
					set andLeft = false
				endif
				if andLeft then
					set temp_4 = target
					set tempIndex_3 = tu
					set temp_tempTupleSelectionResult_1_3 = ThreatHandlerTU_campPos[tempIndex_3]
					set temp_tempTupleSelectionResult_2_3 = ThreatHandlerTU_campPos_2[tempIndex_3]
					set tempTupleSelectionResult_1_2 = temp_tempTupleSelectionResult_1_3
					set temp_5 = tempTupleSelectionResult_1_2
					set tempIndex_4 = tu
					set temp_tempTupleSelectionResult_1_4 = ThreatHandlerTU_campPos[tempIndex_4]
					set temp_tempTupleSelectionResult_2_4 = ThreatHandlerTU_campPos_2[tempIndex_4]
					set tempTupleSelectionResult_2_2 = temp_tempTupleSelectionResult_2_4
					set andLeft_2 = IsUnitInRangeXY(temp_4, temp_5, tempTupleSelectionResult_2_2, ThreatHandlerConfig_ORDER_RETURN_RANGE)
				else
					set andLeft_2 = false
				endif
				if andLeft_2 then
					if GetUnitCurrentOrder(u) == 851983 or GetUnitCurrentOrder(u) == 0 or GetUnitCurrentOrder(u) == 851971 then
						call unit_issueTargetOrderById(u, 851971, target)
					endif
				else
					call dispatch_ThreatHandlerCamp_returnCamp(camp)
					exitwhen true
				endif
			endloop
		endif
		if ThreatHandlerCamp_state[camp] == 2 then
			if ThreatHandlerCamp_timeToPortLeft[camp] > 0 then
				set ThreatHandlerCamp_timeToPortLeft[camp] = ThreatHandlerCamp_timeToPortLeft[camp] - 1
				set tu = ThreatHandlerCamp_dummy[camp]
				loop
					exitwhen  not (ThreatHandlerTU_campNext[tu] != ThreatHandlerCamp_dummy[camp])
					set tu = ThreatHandlerTU_campNext[tu]
					set u = ThreatHandlerTU_u[tu]
					if ThreatHandlerTU_state[tu] == 2 then
						set temp_6 = u
						set tempIndex_5 = tu
						set temp_tempTupleSelectionResult_1_5 = ThreatHandlerTU_campPos[tempIndex_5]
						set temp_tempTupleSelectionResult_2_5 = ThreatHandlerTU_campPos_2[tempIndex_5]
						set tempTupleSelectionResult_1_3 = temp_tempTupleSelectionResult_1_5
						set temp_7 = tempTupleSelectionResult_1_3
						set tempIndex_6 = tu
						set temp_tempTupleSelectionResult_1_6 = ThreatHandlerTU_campPos[tempIndex_6]
						set temp_tempTupleSelectionResult_2_6 = ThreatHandlerTU_campPos_2[tempIndex_6]
						set tempTupleSelectionResult_2_3 = temp_tempTupleSelectionResult_2_6
						if IsUnitInRangeXY(temp_6, temp_7, tempTupleSelectionResult_2_3, 35.) then
							if  not (GetUnitCurrentOrder(u) == 851986) then
								set ThreatHandlerTU_state[tu] = 3
								call unit_pause(u)
								call dispatch_ThreatHandlerCamp_checkReturned(camp)
							endif
						else
							set temp_8 = u
							set tempIndex_7 = tu
							call unit_issuePointOrder(temp_8, "move", ThreatHandlerTU_campPos[tempIndex_7], ThreatHandlerTU_campPos_2[tempIndex_7])
						endif
					endif
				endloop
			else
				set ThreatHandlerCamp_state[camp] = 0
				set tu = ThreatHandlerCamp_dummy[camp]
				loop
					exitwhen  not (ThreatHandlerTU_campNext[tu] != ThreatHandlerCamp_dummy[camp])
					set tu = ThreatHandlerTU_campNext[tu]
					set u = ThreatHandlerTU_u[tu]
					if ThreatHandlerTU_state[tu] == 2 then
						set temp_9 = u
						set tempIndex_8 = tu
						call unit_setPos(temp_9, ThreatHandlerTU_campPos[tempIndex_8], ThreatHandlerTU_campPos_2[tempIndex_8])
						call onThreatUnitReturn(u)
					endif
					set ThreatHandlerTU_state[tu] = 0
					call SetUnitInvulnerable(u, false)
					call unit_unpause(u)
				endloop
			endif
		endif
		set i = i + 1
	endloop
	set u = null
	set target = null
	set temp_2 = null
	set temp_4 = null
	set temp_6 = null
	set temp_8 = null
	set temp_9 = null
endfunction

function initGlobals takes nothing returns nothing
	set LinkedList_firstFree = 0
	set LinkedList_maxIndex = 0
	set LLEntry_firstFree = 0
	set LLEntry_maxIndex = 0
	set LLIterator_firstFree = 0
	set LLIterator_maxIndex = 0
	set Table_firstFree = 0
	set Table_maxIndex = 0
	set W3UDefinition_firstFree = 0
	set W3UDefinition_maxIndex = 0
	set AbilityDefinition_firstFree = 0
	set AbilityDefinition_maxIndex = 0
	set BonusType_firstFree = 0
	set BonusType_maxIndex = 0
	set StatChangedEvent_firstFree = 0
	set StatChangedEvent_maxIndex = 0
	set HashMap_firstFree = 0
	set HashMap_maxIndex = 0
	set StatEntity_firstFree = 0
	set StatEntity_maxIndex = 0
	set StatList_firstFree = 0
	set StatList_maxIndex = 0
	set StatListIterator_firstFree = 0
	set StatListIterator_maxIndex = 0
	set UnitBaseStatBuffer_firstFree = 0
	set UnitBaseStatBuffer_maxIndex = 0
	set UnitStatBuffer_firstFree = 0
	set UnitStatBuffer_maxIndex = 0
	set UnitTypeX_firstFree = 0
	set UnitTypeX_maxIndex = 0
	set UnitX_firstFree = 0
	set UnitX_maxIndex = 0
	set ThreatHandlerCamp_firstFree = 0
	set ThreatHandlerCamp_maxIndex = 0
	set ThreatHandlerPU_firstFree = 0
	set ThreatHandlerPU_maxIndex = 0
	set ThreatHandlerTU_firstFree = 0
	set ThreatHandlerTU_maxIndex = 0
	set ThreatUnitIterator_firstFree = 0
	set ThreatUnitIterator_maxIndex = 0
	set ThreatListEntry_firstFree = 0
	set ThreatListEntry_maxIndex = 0
	set UnitDamageHandler_firstFree = 0
	set UnitDamageHandler_maxIndex = 0
	set ItemTypeX_firstFree = 0
	set ItemTypeX_maxIndex = 0
	set PlayerX_firstFree = 0
	set PlayerX_maxIndex = 0
	set ref_function_PerformStockUpdates = function PerformStockUpdates
	set ref_function_UpdateEachStockBuildingEnum = function UpdateEachStockBuildingEnum
	set ref_function_MeleeDoDrawEnum = function MeleeDoDrawEnum
	set ref_function_MeleeDoDefeatEnum = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum = function MeleeDoVictoryEnum
	set ref_function_MeleeDoDefeatEnum_2 = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum_2 = function MeleeDoVictoryEnum
	set ref_function_MeleeCrippledPlayerTimeout = function MeleeCrippledPlayerTimeout
	set ref_function_TriggerActionUnitRescuedBJ = function TriggerActionUnitRescuedBJ
	set ref_function_MakeUnitsPassiveForPlayerEnum = function MakeUnitsPassiveForPlayerEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_2 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayFleshEnum = function DelayedSuspendDecayFleshEnum
	set ref_function_DelayedSuspendDecayBoneEnum = function DelayedSuspendDecayBoneEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_3 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_acquireTarget = function acquireTarget
	set ref_function_closure_impl = function closure_impl_4
	set ref_function_switchDebug = function switchDebug
	set ref_function_closure_impl_2 = function closure_impl_2
	set ref_function_closure_impl_3 = function closure_impl_3
	set ref_function_closure_impl_4 = function closure_impl_5
	set ref_function_update = function update
	set ref_function_UnitDamageHandler_unitAttacked = function UnitDamageHandler_unitAttacked
	set ref_function_closure_impl_5 = function closure_impl_6
	set ref_function_closure_impl_6 = function closure_impl
endfunction

function init_APT takes nothing returns nothing
endfunction

function init_Basics takes nothing returns nothing
	call Player(15)
	call Player(12)
endfunction

function int_toReal takes integer this returns real
	return I2R(this)
endfunction

function alloc_BonusType takes nothing returns integer
	local integer this
	if BonusType_firstFree == 0 then
		set BonusType_maxIndex = BonusType_maxIndex + 1
		set this = BonusType_maxIndex
	else
		set BonusType_firstFree = BonusType_firstFree - 1
		set this = BonusType_nextFree[BonusType_firstFree]
	endif
	return this
endfunction

function construct_BonusType takes integer this, integer baseRaw, integer maxBonus returns nothing
endfunction

function new_BonusType takes integer baseRaw, integer maxBonus returns integer
	local integer this = alloc_BonusType()
	call construct_BonusType(this, baseRaw, maxBonus)
	return this
endfunction

function real_toInt takes real this returns integer
	return R2I(this)
endfunction

function int_moduloInt takes integer this, integer divisor returns integer
	return this - this / divisor * divisor
endfunction

function shiftRaw takes integer n returns integer
	if n < 10 then
		return n
	else
		return n / 10 * 256 + int_moduloInt(n, 10)
	endif
endfunction

function init_BonusHandler takes nothing returns nothing
	local integer n = 0
	local integer n_2
	loop
		exitwhen n > 30
		call real_toInt(Pow(2., int_toReal(n)))
		set n = n + 1
	endloop
	set n_2 = 0
	loop
		exitwhen n_2 > 30
		call shiftRaw(n_2)
		set n_2 = n_2 + 1
	endloop
	call new_BonusType(608972848, BonusHandlerConfig_MAX_BONUS_LIFE)
	call new_BonusType(609038384, BonusHandlerConfig_MAX_BONUS_MANA)
	call new_BonusType(608448560, BonusHandlerConfig_MAX_BONUS_DAMAGE)
	call new_BonusType(609366064, BonusHandlerConfig_MAX_BONUS_ARMOR)
	call new_BonusType(609628208, BonusHandlerConfig_MAX_BONUS_SIGHTRANGE)
	call new_BonusType(611070000, BonusHandlerConfig_MAX_BONUS_LIFEREGEN)
	call new_BonusType(611135536, BonusHandlerConfig_MAX_BONUS_MANAREGEN)
	call new_BonusType(609234992, BonusHandlerConfig_MAX_BONUS_ATTACKSPEED)
	call new_BonusType(609431600, BonusHandlerConfig_MAX_BONUS_STRENGTH)
	call new_BonusType(608251952, BonusHandlerConfig_MAX_BONUS_AGILITY)
	call new_BonusType(608776240, BonusHandlerConfig_MAX_BONUS_INTELLIGENCE)
endfunction

function init_BonusHandlerConfig takes nothing returns nothing
	set BonusHandlerConfig_MAX_BONUS_LIFE = 12
	set BonusHandlerConfig_MAX_BONUS_MANA = 12
	set BonusHandlerConfig_MAX_BONUS_DAMAGE = 10
	set BonusHandlerConfig_MAX_BONUS_ARMOR = 10
	set BonusHandlerConfig_MAX_BONUS_SIGHTRANGE = 11
	set BonusHandlerConfig_MAX_BONUS_LIFEREGEN = 4
	set BonusHandlerConfig_MAX_BONUS_MANAREGEN = 10
	set BonusHandlerConfig_MAX_BONUS_ATTACKSPEED = 9
	set BonusHandlerConfig_MAX_BONUS_STRENGTH = 9
	set BonusHandlerConfig_MAX_BONUS_AGILITY = 9
	set BonusHandlerConfig_MAX_BONUS_INTELLIGENCE = 9
endfunction

function c2sInit takes nothing returns nothing
	set Char_c2s[0] = ""
	set Char_c2s[1] = ""
	set Char_c2s[2] = ""
	set Char_c2s[3] = ""
	set Char_c2s[4] = ""
	set Char_c2s[5] = ""
	set Char_c2s[6] = ""
	set Char_c2s[7] = ""
	set Char_c2s[8] = ""
	set Char_c2s[9] = "\t"
	set Char_c2s[10] = "\n"
	set Char_c2s[11] = ""
	set Char_c2s[12] = ""
	set Char_c2s[13] = "\r"
	set Char_c2s[14] = ""
	set Char_c2s[15] = ""
	set Char_c2s[16] = ""
	set Char_c2s[17] = ""
	set Char_c2s[18] = ""
	set Char_c2s[19] = ""
	set Char_c2s[20] = ""
	set Char_c2s[21] = ""
	set Char_c2s[22] = ""
	set Char_c2s[23] = ""
	set Char_c2s[24] = ""
	set Char_c2s[25] = ""
	set Char_c2s[26] = ""
	set Char_c2s[27] = ""
	set Char_c2s[28] = ""
	set Char_c2s[29] = ""
	set Char_c2s[30] = ""
	set Char_c2s[31] = ""
	set Char_c2s[32] = " "
	set Char_c2s[33] = "!"
	set Char_c2s[34] = "\""
	set Char_c2s[35] = "#"
	set Char_c2s[36] = "$"
	set Char_c2s[37] = "%"
	set Char_c2s[38] = "&"
	set Char_c2s[39] = "'"
	set Char_c2s[40] = "("
	set Char_c2s[41] = ")"
	set Char_c2s[42] = "*"
	set Char_c2s[43] = "+"
	set Char_c2s[44] = ","
	set Char_c2s[45] = "-"
	set Char_c2s[46] = "."
	set Char_c2s[47] = "/"
	set Char_c2s[48] = "0"
	set Char_c2s[49] = "1"
	set Char_c2s[50] = "2"
	set Char_c2s[51] = "3"
	set Char_c2s[52] = "4"
	set Char_c2s[53] = "5"
	set Char_c2s[54] = "6"
	set Char_c2s[55] = "7"
	set Char_c2s[56] = "8"
	set Char_c2s[57] = "9"
	set Char_c2s[58] = ":"
	set Char_c2s[59] = ";"
	set Char_c2s[60] = "<"
	set Char_c2s[61] = "="
	set Char_c2s[62] = ">"
	set Char_c2s[63] = "?"
	set Char_c2s[64] = "@"
	set Char_c2s[65] = "A"
	set Char_c2s[66] = "B"
	set Char_c2s[67] = "C"
	set Char_c2s[68] = "D"
	set Char_c2s[69] = "E"
	set Char_c2s[70] = "F"
	set Char_c2s[71] = "G"
	set Char_c2s[72] = "H"
	set Char_c2s[73] = "I"
	set Char_c2s[74] = "J"
	set Char_c2s[75] = "K"
	set Char_c2s[76] = "L"
	set Char_c2s[77] = "M"
	set Char_c2s[78] = "N"
	set Char_c2s[79] = "O"
	set Char_c2s[80] = "P"
	set Char_c2s[81] = "Q"
	set Char_c2s[82] = "R"
	set Char_c2s[83] = "S"
	set Char_c2s[84] = "T"
	set Char_c2s[85] = "U"
	set Char_c2s[86] = "V"
	set Char_c2s[87] = "W"
	set Char_c2s[88] = "X"
	set Char_c2s[89] = "Y"
	set Char_c2s[90] = "Z"
	set Char_c2s[91] = "["
	set Char_c2s[92] = "\\"
	set Char_c2s[93] = "]"
	set Char_c2s[94] = "^"
	set Char_c2s[95] = "_"
	set Char_c2s[96] = "`"
	set Char_c2s[97] = "a"
	set Char_c2s[98] = "b"
	set Char_c2s[99] = "c"
	set Char_c2s[100] = "d"
	set Char_c2s[101] = "e"
	set Char_c2s[102] = "f"
	set Char_c2s[103] = "g"
	set Char_c2s[104] = "h"
	set Char_c2s[105] = "i"
	set Char_c2s[106] = "j"
	set Char_c2s[107] = "k"
	set Char_c2s[108] = "l"
	set Char_c2s[109] = "m"
	set Char_c2s[110] = "n"
	set Char_c2s[111] = "o"
	set Char_c2s[112] = "p"
	set Char_c2s[113] = "q"
	set Char_c2s[114] = "r"
	set Char_c2s[115] = "s"
	set Char_c2s[116] = "t"
	set Char_c2s[117] = "u"
	set Char_c2s[118] = "v"
	set Char_c2s[119] = "w"
	set Char_c2s[120] = "x"
	set Char_c2s[121] = "y"
	set Char_c2s[122] = "z"
	set Char_c2s[123] = "{"
	set Char_c2s[124] = "|"
	set Char_c2s[125] = "}"
	set Char_c2s[126] = "~"
	set Char_c2s[127] = ""
endfunction

function string_toUpperCase takes string this returns string
	return StringCase(this, true)
endfunction

function s2cInit takes nothing returns nothing
	local integer i = 0
	local integer temp = Char_MAX_INDEX
	loop
		exitwhen i > temp
		if string_toUpperCase(Char_c2s[i]) == Char_c2s[i] then
		endif
		set i = i + 1
	endloop
endfunction

function widthInit takes nothing returns nothing
endfunction

function init_Char takes nothing returns nothing
	set Char_MAX_INDEX = 126 + 1
	call c2sInit()
	call s2cInit()
	call widthInit()
endfunction

function alloc_Table takes nothing returns integer
	local integer this
	if Table_firstFree == 0 then
		set Table_maxIndex = Table_maxIndex + 1
		set this = Table_maxIndex
	else
		set Table_firstFree = Table_firstFree - 1
		set this = Table_nextFree[Table_firstFree]
	endif
	set Table_typeId[this] = 6
	return this
endfunction

function construct_Table takes integer this returns nothing
endfunction

function new_Table takes nothing returns integer
	local integer this = alloc_Table()
	call construct_Table(this)
	return this
endfunction

function init_Colors takes nothing returns nothing
	local integer i = 0
	local integer i2
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempIndex_9
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local integer tempIndex_13
	loop
		exitwhen i > 9
		call int_toString(i)
		set i = i + 1
	endloop
	set Colors_decs = new_Table()
	set i2 = 0
	loop
		exitwhen i2 > 9
		call dispatch_Table_saveInt(Colors_decs, StringHash(int_toString(i2)), i2)
		set i2 = i2 + 1
	endloop
	call dispatch_Table_saveInt(Colors_decs, StringHash("A"), 10)
	call dispatch_Table_saveInt(Colors_decs, StringHash("B"), 11)
	call dispatch_Table_saveInt(Colors_decs, StringHash("C"), 12)
	call dispatch_Table_saveInt(Colors_decs, StringHash("D"), 13)
	call dispatch_Table_saveInt(Colors_decs, StringHash("E"), 14)
	call dispatch_Table_saveInt(Colors_decs, StringHash("F"), 15)
	set tempIndex = 0
	set tempIndex_2 = 1
	set tempIndex_3 = 2
	set tempIndex_4 = 3
	set tempIndex_5 = 4
	set tempIndex_6 = 5
	set tempIndex_7 = 6
	set tempIndex_8 = 7
	set tempIndex_9 = 8
	set tempIndex_10 = 9
	set tempIndex_11 = 10
	set tempIndex_12 = 11
	set tempIndex_13 = 12
endfunction

function trigger_addAction takes trigger this, code actionFunc returns nothing
	call TriggerAddAction(this, actionFunc)
endfunction

function init_DamageHandler takes nothing returns nothing
	local trigger receiver = CreateTrigger()
	call trigger_addAction(receiver, ref_function_UnitDamageHandler_unitAttacked)
	set DamageHandler_unitAttackTrigger = receiver
	set receiver = null
endfunction

function init_EquipmentSlotList takes nothing returns nothing
endfunction

function init_HashMap takes nothing returns nothing
	set HashMap_ht = InitHashtable()
endfunction

function UnitBaseStatBuffer_s2i takes integer this, integer s returns integer
	return UnitBaseStatBuffer_arrayStart[this] + s
endfunction

function dispatch_UnitBaseStatBuffer_s2i takes integer this, integer s returns integer
	local integer s2i_result
	if UnitBaseStatBuffer_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitBaseStatBuffer.s2i")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitBaseStatBuffer.s2i on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set s2i_result = UnitBaseStatBuffer_s2i(this, s)
	return s2i_result
endfunction

function UnitBaseStatBuffer_set takes integer this, integer s, integer value returns nothing
	local integer temp = StatHandler_statType[s]
	if temp == 0 then
		set UnitBaseStatBuffer_stats[dispatch_UnitBaseStatBuffer_s2i(this, s)] = value
	elseif temp == 1 then
		set UnitBaseStatBuffer_stats[dispatch_UnitBaseStatBuffer_s2i(this, s)] = value + 100
	elseif temp == 2 then
		set UnitBaseStatBuffer_stats[dispatch_UnitBaseStatBuffer_s2i(this, s)] = 100 - value
	endif
endfunction

function dispatch_UnitBaseStatBuffer_set takes integer this, integer s, integer value returns nothing
	if UnitBaseStatBuffer_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitBaseStatBuffer.set")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitBaseStatBuffer.set on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitBaseStatBuffer_set(this, s, value)
endfunction

function alloc_HeroUnitTypeX takes nothing returns integer
	local integer this
	if UnitTypeX_firstFree == 0 then
		set UnitTypeX_maxIndex = UnitTypeX_maxIndex + 1
		set this = UnitTypeX_maxIndex
	else
		set UnitTypeX_firstFree = UnitTypeX_firstFree - 1
		set this = UnitTypeX_nextFree[UnitTypeX_firstFree]
	endif
	return this
endfunction

function HashMap_put takes integer this, integer key, integer value returns nothing
	call hashtable_saveInt(HashMap_ht, this, key, value)
endfunction

function dispatch_HashMap_put takes integer this, integer key, integer value returns nothing
	if HashMap_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HashMap.put")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HashMap.put on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HashMap_put(this, key, value)
endfunction

function construct_UnitTypeX takes integer this, integer raw, integer unitBaseStatBuffer returns nothing
	call dispatch_HashMap_put(UnitTypeX_raw2UnitType, raw, this)
	set UnitTypeX_raw[this] = raw
	set UnitTypeX_damageType[this] = 0
	set UnitTypeX_unitBaseStatBuffer[this] = unitBaseStatBuffer
endfunction

function construct_HeroUnitTypeX takes integer this, integer baseRawId, integer unitBaseStatBuffer returns nothing
	call construct_UnitTypeX(this, baseRawId, unitBaseStatBuffer)
endfunction

function new_HeroUnitTypeX takes integer baseRawId, integer unitBaseStatBuffer returns integer
	local integer this = alloc_HeroUnitTypeX()
	call construct_HeroUnitTypeX(this, baseRawId, unitBaseStatBuffer)
	return this
endfunction

function alloc_UnitBaseStatBuffer takes nothing returns integer
	local integer this
	if UnitBaseStatBuffer_firstFree == 0 then
		set UnitBaseStatBuffer_maxIndex = UnitBaseStatBuffer_maxIndex + 1
		set this = UnitBaseStatBuffer_maxIndex
	else
		set UnitBaseStatBuffer_firstFree = UnitBaseStatBuffer_firstFree - 1
		set this = UnitBaseStatBuffer_nextFree[UnitBaseStatBuffer_firstFree]
	endif
	set UnitBaseStatBuffer_typeId[this] = 658
	return this
endfunction

function construct_UnitBaseStatBuffer takes integer this, integer unitType returns nothing
	local integer n
	local integer temp
	call dispatch_HashMap_put(StatHandler_mapBaseStatBuffers, unitType, this)
	set UnitBaseStatBuffer_arrayStart[this] = 1 + (this - 1) * StatHandler_numStats
	set n = 0
	set temp = StatHandler_numStats
	loop
		exitwhen n > temp
		if StatHandler_statType[n] == 0 then
			set UnitBaseStatBuffer_stats[UnitBaseStatBuffer_arrayStart[this] + n] = 0
		else
			set UnitBaseStatBuffer_stats[UnitBaseStatBuffer_arrayStart[this] + n] = 100
		endif
		set n = n + 1
	endloop
endfunction

function new_UnitBaseStatBuffer takes integer unitType returns integer
	local integer this = alloc_UnitBaseStatBuffer()
	call construct_UnitBaseStatBuffer(this, unitType)
	return this
endfunction

function herogenInitHero takes integer life, integer mana, integer damage, integer armor, integer attackspeed, integer movespeed, integer damageType returns nothing
	local integer receiver = new_UnitBaseStatBuffer(HeroDummyGen_HERO_DUMMY_DEFAULT_RAW)
	local integer baseStats
	local integer receiver_2
	local integer receiver_3
	local integer receiver_4
	local integer receiver_5
	local integer receiver_6
	call dispatch_UnitBaseStatBuffer_set(receiver, 0, life)
	set receiver_2 = receiver
	call dispatch_UnitBaseStatBuffer_set(receiver_2, 1, mana)
	set receiver_3 = receiver_2
	call dispatch_UnitBaseStatBuffer_set(receiver_3, 7, damage)
	set receiver_4 = receiver_3
	call dispatch_UnitBaseStatBuffer_set(receiver_4, 9, armor)
	set receiver_5 = receiver_4
	call dispatch_UnitBaseStatBuffer_set(receiver_5, 10, attackspeed)
	set receiver_6 = receiver_5
	call dispatch_UnitBaseStatBuffer_set(receiver_6, 11, movespeed)
	set baseStats = receiver_6
	set HeroDummyGen_HERO_TYPE = new_HeroUnitTypeX(HeroDummyGen_HERO_DUMMY_DEFAULT_RAW, baseStats)
	set UnitTypeX_damageType[HeroDummyGen_HERO_TYPE] = damageType
endfunction

function damageType2string takes integer damageType returns string
	local string ret = ""
	local integer temp = damageType
	if temp == 0 then
		set ret = "normal"
	elseif temp == 1 then
		set ret = "siege"
	elseif temp == 2 then
		set ret = "pierce"
	elseif temp == 3 then
		set ret = "magic"
	elseif temp == 4 then
		set ret = "hero"
	endif
	return ret
endfunction

function ObjectDefinition_setUnreal takes integer this_key, string modification, real value returns nothing
endfunction

function HeroDefinition_setAgilityPerLevel takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uagp", data)
endfunction

function dispatch_HeroDefinition_setAgilityPerLevel takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setAgilityPerLevel")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setAgilityPerLevel on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setAgilityPerLevel(this, data)
endfunction

function ObjectDefinition_setString takes integer this_key, string modification, string value returns nothing
endfunction

function HeroDefinition_setHeroAbilities takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uhab", data)
endfunction

function dispatch_HeroDefinition_setHeroAbilities takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setHeroAbilities")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setHeroAbilities on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setHeroAbilities(this, data)
endfunction

function HeroDefinition_setIntelligencePerLevel takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uinp", data)
endfunction

function dispatch_HeroDefinition_setIntelligencePerLevel takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setIntelligencePerLevel")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setIntelligencePerLevel on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setIntelligencePerLevel(this, data)
endfunction

function HeroDefinition_setProperNames takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "upro", data)
endfunction

function dispatch_HeroDefinition_setProperNames takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setProperNames")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setProperNames on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setProperNames(this, data)
endfunction

function ObjectDefinition_setInt takes integer this_key, string modification, integer value returns nothing
endfunction

function HeroDefinition_setProperNamesUsed takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "upru", data)
endfunction

function dispatch_HeroDefinition_setProperNamesUsed takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setProperNamesUsed")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setProperNamesUsed on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setProperNamesUsed(this, data)
endfunction

function HeroDefinition_setStartingAgility takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uagi", data)
endfunction

function dispatch_HeroDefinition_setStartingAgility takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setStartingAgility")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setStartingAgility on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStartingAgility(this, data)
endfunction

function HeroDefinition_setStartingIntelligence takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uint", data)
endfunction

function dispatch_HeroDefinition_setStartingIntelligence takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setStartingIntelligence")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setStartingIntelligence on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStartingIntelligence(this, data)
endfunction

function HeroDefinition_setStartingStrength takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ustr", data)
endfunction

function dispatch_HeroDefinition_setStartingStrength takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setStartingStrength")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setStartingStrength on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStartingStrength(this, data)
endfunction

function HeroDefinition_setStrengthPerLevel takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ustp", data)
endfunction

function dispatch_HeroDefinition_setStrengthPerLevel takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling HeroDefinition.setStrengthPerLevel")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called HeroDefinition.setStrengthPerLevel on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call HeroDefinition_setStrengthPerLevel(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1AttackType takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ua1t", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1AttackType takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1AttackType")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1AttackType on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1AttackType(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "ua1c", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1CooldownTime")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1CooldownTime on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1DamageBase takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1b", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageBase takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1DamageBase")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1DamageBase on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1DamageBase(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1d", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1DamageNumberofDice")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1DamageNumberofDice on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1s", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1DamageSidesperDie")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1DamageSidesperDie on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1Range takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1r", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1Range takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1Range")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1Range on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1Range(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttacksEnabled takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uaen", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttacksEnabled takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttacksEnabled")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttacksEnabled on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttacksEnabled(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setDefaultActiveAbility takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "udaa", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setDefaultActiveAbility takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setDefaultActiveAbility")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setDefaultActiveAbility on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setDefaultActiveAbility(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setDefenseBase takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "udef", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setDefenseBase takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setDefenseBase")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setDefenseBase on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setDefenseBase(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setDefenseType takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "udty", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setDefenseType takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setDefenseType")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setDefenseType on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setDefenseType(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setDefenseUpgradeBonus takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "udup", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setDefenseUpgradeBonus takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setDefenseUpgradeBonus")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setDefenseUpgradeBonus on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setDefenseUpgradeBonus(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setDependencyEquivalents takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "udep", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setDependencyEquivalents takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setDependencyEquivalents")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setDependencyEquivalents on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setDependencyEquivalents(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setFoodCost takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ufoo", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setFoodCost takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setFoodCost")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setFoodCost on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setFoodCost(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedBase takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ubba", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedBase takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setGoldBountyAwardedBase")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setGoldBountyAwardedBase on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedBase(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedNumberofDice takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ubdi", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedNumberofDice takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setGoldBountyAwardedNumberofDice")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setGoldBountyAwardedNumberofDice on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedNumberofDice(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "uhpm", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setHitPointsMaximumBase")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setHitPointsMaximumBase on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setHitPointsRegenerationRate takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uhpr", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsRegenerationRate takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setHitPointsRegenerationRate")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setHitPointsRegenerationRate on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setHitPointsRegenerationRate(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setIconGameInterface takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uico", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setIconGameInterface takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setIconGameInterface")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setIconGameInterface on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setIconGameInterface(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setManaMaximum takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "umpm", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setManaMaximum takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setManaMaximum")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setManaMaximum on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setManaMaximum(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setManaRegeneration takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "umpr", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setManaRegeneration takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setManaRegeneration")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setManaRegeneration on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setManaRegeneration(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setModelFile takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "umdl", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setModelFile takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setModelFile")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setModelFile on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setModelFile(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setNameEditorSuffix takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "unsf", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setNameEditorSuffix takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setNameEditorSuffix")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setNameEditorSuffix on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setNameEditorSuffix(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setNormalAbilities takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uabi", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setNormalAbilities takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setNormalAbilities")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setNormalAbilities on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setNormalAbilities(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setPointValue takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "upoi", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setPointValue takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setPointValue")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setPointValue on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setPointValue(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setRace takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "urac", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setRace takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setRace")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setRace on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setRace(this, data)
endfunction

function ObjectDefinition_setReal takes integer this_key, string modification, real value returns nothing
endfunction

function UnitOrBuildingOrHeroDefinition_setScalingValue takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "usca", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setScalingValue takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setScalingValue")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setScalingValue on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setScalingValue(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSelectionScale takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ussc", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSelectionScale takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSelectionScale")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setSelectionScale on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSelectionScale(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setShadowImageCenterX takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ushx", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageCenterX takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageCenterX")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setShadowImageCenterX on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setShadowImageCenterX(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setShadowImageHeight takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ushh", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageHeight takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageHeight")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setShadowImageHeight on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setShadowImageHeight(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setShadowImageWidth takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setReal(W3UDefinition_def[tempIndex], "ushw", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageWidth takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageWidth")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setShadowImageWidth on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setShadowImageWidth(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSightRadiusDay takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "usid", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusDay takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSightRadiusDay")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setSightRadiusDay on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSightRadiusDay(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSightRadiusNight takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "usin", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusNight takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSightRadiusNight")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setSightRadiusNight on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSightRadiusNight(this, data)
endfunction

function boolean_toInt takes boolean this returns integer
	if this then
		return 1
	else
		return 0
	endif
endfunction

function ObjectDefinition_setBoolean takes integer this_key, string modification, boolean value returns nothing
	call ObjectDefinition_setInt(this_key, modification, boolean_toInt(value))
endfunction

function UnitOrBuildingOrHeroDefinition_setSleeps takes integer this, boolean data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setBoolean(W3UDefinition_def[tempIndex], "usle", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSleeps takes integer this, boolean data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSleeps")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setSleeps on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSleeps(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setSpeedBase takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "umvs", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setSpeedBase takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSpeedBase")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setSpeedBase on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setSpeedBase(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setTargetedAs takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "utar", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setTargetedAs takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setTargetedAs")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setTargetedAs on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setTargetedAs(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setUnitClassification takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "utyp", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setUnitClassification takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setUnitClassification")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setUnitClassification on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setUnitClassification(this, data)
endfunction

function W3UDefinition_setDescription takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ides", data)
endfunction

function dispatch_W3UDefinition_setDescription takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling W3UDefinition.setDescription")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called W3UDefinition.setDescription on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setDescription(this, data)
endfunction

function W3UDefinition_setHotkey takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "uhot", data)
endfunction

function dispatch_W3UDefinition_setHotkey takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling W3UDefinition.setHotkey")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called W3UDefinition.setHotkey on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setHotkey(this, data)
endfunction

function W3UDefinition_setName takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "unam", data)
endfunction

function dispatch_W3UDefinition_setName takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling W3UDefinition.setName")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called W3UDefinition.setName on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setName(this, data)
endfunction

function W3UDefinition_setRequirements takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ureq", data)
endfunction

function dispatch_W3UDefinition_setRequirements takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling W3UDefinition.setRequirements")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called W3UDefinition.setRequirements on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setRequirements(this, data)
endfunction

function W3UDefinition_setRequirementsLevels takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "urqa", data)
endfunction

function dispatch_W3UDefinition_setRequirementsLevels takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling W3UDefinition.setRequirementsLevels")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called W3UDefinition.setRequirementsLevels on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setRequirementsLevels(this, data)
endfunction

function W3UDefinition_setTooltipBasic takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "utip", data)
endfunction

function dispatch_W3UDefinition_setTooltipBasic takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling W3UDefinition.setTooltipBasic")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called W3UDefinition.setTooltipBasic on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setTooltipBasic(this, data)
endfunction

function W3UDefinition_setTooltipExtended takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "utub", data)
endfunction

function dispatch_W3UDefinition_setTooltipExtended takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling W3UDefinition.setTooltipExtended")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called W3UDefinition.setTooltipExtended on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call W3UDefinition_setTooltipExtended(this, data)
endfunction

function ObjectDefinition_setLvlDataString takes integer this_key, string modification, integer lvl, integer dataPointer, string value returns nothing
endfunction

function AbilityDefinitionBearform_setAlternateFormUnit takes integer this, integer level, string value returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "Emeu", level, 0, value)
endfunction

function dispatch_AbilityDefinitionBearform_setAlternateFormUnit takes integer this, integer level, string value returns nothing
	if AbilityDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling AbilityDefinitionBearform.setAlternateFormUnit")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called AbilityDefinitionBearform.setAlternateFormUnit on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionBearform_setAlternateFormUnit(this, level, value)
endfunction

function AbilityDefinitionBearform_setNormalFormUnit takes integer this, integer level, string value returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "Eme1", level, 1, value)
endfunction

function dispatch_AbilityDefinitionBearform_setNormalFormUnit takes integer this, integer level, string value returns nothing
	if AbilityDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling AbilityDefinitionBearform.setNormalFormUnit")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called AbilityDefinitionBearform.setNormalFormUnit on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinitionBearform_setNormalFormUnit(this, level, value)
endfunction

function ObjectDefinition_setLvlDataUnreal takes integer this_key, string modification, integer lvl, integer dataPointer, real value returns nothing
endfunction

function AbilityDefinition_setDurationNormal takes integer this, integer level, real value returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setLvlDataUnreal(AbilityDefinition_def[tempIndex], "adur", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setDurationNormal takes integer this, integer level, real value returns nothing
	if AbilityDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling AbilityDefinition.setDurationNormal")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called AbilityDefinition.setDurationNormal on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinition_setDurationNormal(this, level, value)
endfunction

function ObjectDefinition_setLvlDataInt takes integer this_key, string modification, integer lvl, integer dataPointer, integer value returns nothing
endfunction

function AbilityDefinition_setManaCost takes integer this, integer level, integer value returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setLvlDataInt(AbilityDefinition_def[tempIndex], "amcs", level, 0, value)
endfunction

function dispatch_AbilityDefinition_setManaCost takes integer this, integer level, integer value returns nothing
	if AbilityDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling AbilityDefinition.setManaCost")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called AbilityDefinition.setManaCost on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinition_setManaCost(this, level, value)
endfunction

function AbilityDefinition_setName takes integer this, string value returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "anam", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setName takes integer this, string value returns nothing
	if AbilityDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling AbilityDefinition.setName")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called AbilityDefinition.setName on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinition_setName(this, value)
endfunction

function AbilityDefinition_setRequirements takes integer this, string value returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "areq", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setRequirements takes integer this, string value returns nothing
	if AbilityDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling AbilityDefinition.setRequirements")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called AbilityDefinition.setRequirements on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinition_setRequirements(this, value)
endfunction

function AbilityDefinition_setRequirementsLevels takes integer this, string value returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setLvlDataString(AbilityDefinition_def[tempIndex], "arqa", 0, 0, value)
endfunction

function dispatch_AbilityDefinition_setRequirementsLevels takes integer this, string value returns nothing
	if AbilityDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling AbilityDefinition.setRequirementsLevels")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called AbilityDefinition.setRequirementsLevels on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call AbilityDefinition_setRequirementsLevels(this, value)
endfunction

function idInteger2IdString takes integer value returns string
	local string result = ""
	local integer remainingValue = value
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result = SubString(ObjectIds_charMap, charValue, charValue + 1) + result
		set byteno = byteno + 1
	endloop
	return result
endfunction

function alloc_AbilityDefinitionBearform takes nothing returns integer
	local integer this
	if AbilityDefinition_firstFree == 0 then
		set AbilityDefinition_maxIndex = AbilityDefinition_maxIndex + 1
		set this = AbilityDefinition_maxIndex
	else
		set AbilityDefinition_firstFree = AbilityDefinition_firstFree - 1
		set this = AbilityDefinition_nextFree[AbilityDefinition_firstFree]
	endif
	set AbilityDefinition_typeId[this] = 230
	return this
endfunction

function createObjectDefinition takes string fileType, integer newId, integer deriveFrom returns integer
	return 0
endfunction

function construct_AbilityDefinition takes integer this, integer newAbilityId, integer origAbilityId returns nothing
	set AbilityDefinition_def[this] = createObjectDefinition("w3a", newAbilityId, origAbilityId)
endfunction

function construct_AbilityDefinitionBearform takes integer this, integer newAbilityId returns nothing
	call construct_AbilityDefinition(this, newAbilityId, 1096970854)
endfunction

function new_AbilityDefinitionBearform takes integer newAbilityId returns integer
	local integer this = alloc_AbilityDefinitionBearform()
	call construct_AbilityDefinitionBearform(this, newAbilityId)
	return this
endfunction

function genMorphAbility takes integer fromRaw, integer toRaw returns integer
	local integer abilRaw = HeroDummyGen_morphAbilityBaseRaw
	local integer def
	set HeroDummyGen_morphAbilityBaseRaw = HeroDummyGen_morphAbilityBaseRaw + 1
	if HeroDummyGen_compiletimeMode then
		set def = new_AbilityDefinitionBearform(abilRaw)
		call dispatch_AbilityDefinitionBearform_setNormalFormUnit(def, 1, idInteger2IdString(toRaw))
		call dispatch_AbilityDefinitionBearform_setAlternateFormUnit(def, 1, idInteger2IdString(fromRaw))
		call dispatch_AbilityDefinition_setRequirements(def, "")
		call dispatch_AbilityDefinition_setRequirementsLevels(def, "")
		call dispatch_AbilityDefinition_setDurationNormal(def, 1, 0.)
		call dispatch_AbilityDefinition_setManaCost(def, 1, 0)
		call dispatch_AbilityDefinition_setName(def, "HeroDummyMorph")
	endif
	return abilRaw
endfunction

function getHeroDummyRawDefault takes nothing returns integer
	return HeroDummyGen_HERO_DUMMY_DEFAULT_RAW
endfunction

function genMorphAbilitiesForDummy takes integer dummyRaw returns nothing
	local integer defaultRaw = getHeroDummyRawDefault()
	local integer morphAbil = genMorphAbility(defaultRaw, dummyRaw)
	local integer unmorphAbil = genMorphAbility(dummyRaw, defaultRaw)
	if  not HeroDummyGen_compiletimeMode then
		call dispatch_HashMap_put(HeroDummyGen_morphAbilities, dummyRaw, morphAbil)
		call dispatch_HashMap_put(HeroDummyGen_unmorphAbilities, dummyRaw, unmorphAbil)
	endif
endfunction

function alloc_HeroDefinition takes nothing returns integer
	local integer this
	if W3UDefinition_firstFree == 0 then
		set W3UDefinition_maxIndex = W3UDefinition_maxIndex + 1
		set this = W3UDefinition_maxIndex
	else
		set W3UDefinition_firstFree = W3UDefinition_firstFree - 1
		set this = W3UDefinition_nextFree[W3UDefinition_firstFree]
	endif
	set W3UDefinition_typeId[this] = 13
	return this
endfunction

function construct_W3UDefinition takes integer this, integer newUnitId, integer origUnitId returns nothing
	set W3UDefinition_def[this] = createObjectDefinition("w3u", newUnitId, origUnitId)
endfunction

function construct_UnitOrBuildingOrHeroDefinition takes integer this, integer newUnitId, integer origUnitId returns nothing
	call construct_W3UDefinition(this, newUnitId, origUnitId)
endfunction

function construct_UnitOrHeroDefinition takes integer this, integer newId, integer origId returns nothing
	call construct_UnitOrBuildingOrHeroDefinition(this, newId, origId)
endfunction

function construct_HeroDefinition takes integer this, integer newId, integer origId returns nothing
	call construct_UnitOrHeroDefinition(this, newId, origId)
endfunction

function new_HeroDefinition takes integer newId, integer origId returns integer
	local integer this = alloc_HeroDefinition()
	call construct_HeroDefinition(this, newId, origId)
	return this
endfunction

function herogenNew takes integer baseRaw, integer life, integer mana, integer damage, integer armor, integer attackspeed, integer movespeed, integer range, integer damageType returns integer
	local integer raw = HeroDummyGen_heroDummyBaseRaw
	local integer receiver
	local integer receiver_2
	local integer receiver_3
	local integer receiver_4
	local integer receiver_5
	local integer receiver_6
	local integer receiver_7
	local integer receiver_8
	local integer receiver_9
	local integer receiver_10
	local integer receiver_11
	local integer receiver_12
	local integer receiver_13
	local integer receiver_14
	local integer receiver_15
	local integer receiver_16
	local integer receiver_17
	local integer receiver_18
	local integer receiver_19
	local integer receiver_20
	local integer receiver_21
	local integer receiver_22
	local integer receiver_23
	local integer receiver_24
	local integer receiver_25
	local integer receiver_26
	local integer receiver_27
	local integer receiver_28
	local integer receiver_29
	local integer receiver_30
	local integer receiver_31
	local integer receiver_32
	local integer receiver_33
	local integer receiver_34
	local integer receiver_35
	local integer receiver_36
	local integer receiver_37
	local integer receiver_38
	local integer receiver_39
	local integer receiver_40
	local integer receiver_41
	local integer receiver_42
	local integer receiver_43
	local integer receiver_44
	local integer receiver_45
	local integer receiver_46
	local integer receiver_47
	local integer receiver_48
	local integer receiver_49
	local integer receiver_50
	local integer receiver_51
	local integer receiver_52
	local integer receiver_53
	set HeroDummyGen_heroDummyBaseRaw = HeroDummyGen_heroDummyBaseRaw + 1
	call genMorphAbilitiesForDummy(raw)
	if HeroDummyGen_compiletimeMode then
		set receiver = new_HeroDefinition(raw, baseRaw)
		call dispatch_HeroDefinition_setProperNames(receiver, "")
		set receiver_2 = receiver
		call dispatch_HeroDefinition_setProperNamesUsed(receiver_2, 1)
		set receiver_3 = receiver_2
		call dispatch_UnitOrBuildingOrHeroDefinition_setDefenseType(receiver_3, "hero")
		set receiver_4 = receiver_3
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1AttackType(receiver_4, damageType2string(damageType))
		set receiver_5 = receiver_4
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1Range(receiver_5, range)
		set receiver_6 = receiver_5
		call dispatch_HeroDefinition_setHeroAbilities(receiver_6, "")
		set receiver_7 = receiver_6
		call dispatch_UnitOrBuildingOrHeroDefinition_setScalingValue(receiver_7, 1.)
		set receiver_8 = receiver_7
		call dispatch_UnitOrBuildingOrHeroDefinition_setModelFile(receiver_8, "war3mapImported\\VillagerMan_ManyAnimations.mdx")
		set receiver_9 = receiver_8
		call dispatch_UnitOrBuildingOrHeroDefinition_setIconGameInterface(receiver_9, "ReplaceableTextures\\CommandButtons\\BTNVillagerMan.blp")
		set receiver_10 = receiver_9
		call dispatch_HeroDefinition_setStartingStrength(receiver_10, 0)
		set receiver_11 = receiver_10
		call dispatch_HeroDefinition_setStrengthPerLevel(receiver_11, 0.00)
		set receiver_12 = receiver_11
		call dispatch_HeroDefinition_setStartingAgility(receiver_12, 0)
		set receiver_13 = receiver_12
		call dispatch_HeroDefinition_setAgilityPerLevel(receiver_13, 0.00)
		set receiver_14 = receiver_13
		call dispatch_HeroDefinition_setStartingIntelligence(receiver_14, 0)
		set receiver_15 = receiver_14
		call dispatch_HeroDefinition_setIntelligencePerLevel(receiver_15, 0.00)
		set receiver_16 = receiver_15
		call dispatch_UnitOrBuildingOrHeroDefinition_setSelectionScale(receiver_16, 1.1)
		set receiver_17 = receiver_16
		call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageWidth(receiver_17, 170.)
		set receiver_18 = receiver_17
		call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageHeight(receiver_18, 170.)
		set receiver_19 = receiver_18
		call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageCenterX(receiver_19, 65.)
		set receiver_20 = receiver_19
		call dispatch_UnitOrBuildingOrHeroDefinition_setShadowImageCenterX(receiver_20, 65.)
		set receiver_21 = receiver_20
		call dispatch_UnitOrBuildingOrHeroDefinition_setTargetedAs(receiver_21, "ground")
		set receiver_22 = receiver_21
		call dispatch_W3UDefinition_setName(receiver_22, "Adventurer")
		set receiver_23 = receiver_22
		call dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase(receiver_23, life)
		set receiver_24 = receiver_23
		call dispatch_UnitOrBuildingOrHeroDefinition_setManaMaximum(receiver_24, mana)
		set receiver_25 = receiver_24
		call dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsRegenerationRate(receiver_25, 0.00)
		set receiver_26 = receiver_25
		call dispatch_UnitOrBuildingOrHeroDefinition_setManaRegeneration(receiver_26, 0.00)
		set receiver_27 = receiver_26
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageBase(receiver_27, damage - 1)
		set receiver_28 = receiver_27
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice(receiver_28, 1)
		set receiver_29 = receiver_28
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie(receiver_29, 1)
		set receiver_30 = receiver_29
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttacksEnabled(receiver_30, 1)
		set receiver_31 = receiver_30
		call dispatch_UnitOrBuildingOrHeroDefinition_setDefenseBase(receiver_31, armor)
		set receiver_32 = receiver_31
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime(receiver_32, attackspeed * 0.01)
		set receiver_33 = receiver_32
		call dispatch_UnitOrBuildingOrHeroDefinition_setSpeedBase(receiver_33, movespeed)
		set receiver_34 = receiver_33
		call dispatch_UnitOrBuildingOrHeroDefinition_setNormalAbilities(receiver_34, "AInv")
		set receiver_35 = receiver_34
		call dispatch_UnitOrBuildingOrHeroDefinition_setDefaultActiveAbility(receiver_35, "")
		set receiver_36 = receiver_35
		call dispatch_UnitOrBuildingOrHeroDefinition_setDependencyEquivalents(receiver_36, "")
		set receiver_37 = receiver_36
		call dispatch_UnitOrBuildingOrHeroDefinition_setDefenseUpgradeBonus(receiver_37, 0)
		set receiver_38 = receiver_37
		call dispatch_W3UDefinition_setRequirements(receiver_38, "")
		set receiver_39 = receiver_38
		call dispatch_W3UDefinition_setRequirementsLevels(receiver_39, "")
		set receiver_40 = receiver_39
		call dispatch_W3UDefinition_setDescription(receiver_40, "")
		set receiver_41 = receiver_40
		call dispatch_UnitOrBuildingOrHeroDefinition_setNameEditorSuffix(receiver_41, "")
		set receiver_42 = receiver_41
		call dispatch_W3UDefinition_setHotkey(receiver_42, "")
		set receiver_43 = receiver_42
		call dispatch_W3UDefinition_setTooltipBasic(receiver_43, "")
		set receiver_44 = receiver_43
		call dispatch_W3UDefinition_setTooltipExtended(receiver_44, "")
		set receiver_45 = receiver_44
		call dispatch_UnitOrBuildingOrHeroDefinition_setUnitClassification(receiver_45, "")
		set receiver_46 = receiver_45
		call dispatch_UnitOrBuildingOrHeroDefinition_setFoodCost(receiver_46, 0)
		set receiver_47 = receiver_46
		call dispatch_UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedBase(receiver_47, 0)
		set receiver_48 = receiver_47
		call dispatch_UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedNumberofDice(receiver_48, 0)
		set receiver_49 = receiver_48
		call dispatch_UnitOrBuildingOrHeroDefinition_setPointValue(receiver_49, 0)
		set receiver_50 = receiver_49
		call dispatch_UnitOrBuildingOrHeroDefinition_setSleeps(receiver_50, false)
		set receiver_51 = receiver_50
		call dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusNight(receiver_51, 700)
		set receiver_52 = receiver_51
		call dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusDay(receiver_52, 700)
		set receiver_53 = receiver_52
		call dispatch_UnitOrBuildingOrHeroDefinition_setRace(receiver_53, "human")
		set HeroDummyGen_currentHeroDefinition = receiver_53
	endif
	return raw
endfunction

function herogenNewMelee takes integer life, integer mana, integer damage, integer armor, integer attackspeed, integer movespeed, integer range, integer damageType returns integer
	return herogenNew(1215324524, life, mana, damage, armor, attackspeed, movespeed, range, damageType)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc takes integer this, real data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setUnreal(W3UDefinition_def[tempIndex], "uma1", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc takes integer this, real data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArc")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArc on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ua1m", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArt")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1ProjectileArt on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt(this, data)
endfunction

function UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ua1z", data)
endfunction

function dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttack1ProjectileSpeed")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrBuildingOrHeroDefinition.setAttack1ProjectileSpeed on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed(this, data)
endfunction

function herogenNewRanged takes integer life, integer mana, integer damage, integer armor, integer attackspeed, integer movespeed, integer range, integer damageType, real projArc, string projModel, integer projSpeed returns integer
	local integer raw = herogenNew(1214344551, life, mana, damage, armor, attackspeed, movespeed, range, damageType)
	if HeroDummyGen_compiletimeMode then
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArc(HeroDummyGen_currentHeroDefinition, projArc)
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileArt(HeroDummyGen_currentHeroDefinition, projModel)
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1ProjectileSpeed(HeroDummyGen_currentHeroDefinition, projSpeed)
	endif
	return raw
endfunction

function put takes integer eqClass, integer dmgType, integer raw returns nothing
	if  not HeroDummyGen_compiletimeMode then
		call hashtable_saveInt(HeroDummyGen_map, eqClass, dmgType, raw)
	endif
endfunction

function initHeroDummyLists takes nothing returns nothing
	local integer life = 80
	local integer mana = 60
	local integer damage = 8
	local integer armor = 0
	local integer movespeed = 300
	local integer attackspeed = 160
	local integer meleeRange = 100
	local integer MELEE_N
	local integer MELEE_B
	local integer MELEE_P
	local integer MELEE_M
	local integer MELEE_F
	local integer RANGED_N
	local integer RANGED_B
	local integer RANGED_P
	local integer RANGED_M
	local integer RANGED_F
	call herogenInitHero(life, mana, damage, armor, attackspeed, movespeed, 0)
	set MELEE_N = herogenNewMelee(life, mana, damage, armor, attackspeed, movespeed, meleeRange, 0)
	set MELEE_B = herogenNewMelee(life, mana, damage, armor, attackspeed, movespeed, meleeRange, 1)
	set MELEE_P = herogenNewMelee(life, mana, damage, armor, attackspeed, movespeed, meleeRange, 2)
	set MELEE_M = herogenNewMelee(life, mana, damage, armor, attackspeed, movespeed, meleeRange, 3)
	set MELEE_F = herogenNewMelee(life, mana, damage, armor, attackspeed, movespeed, meleeRange, 4)
	set RANGED_N = herogenNewRanged(life, mana, damage, armor, attackspeed, movespeed, 600, 0, 0.00, "Abilities\\Weapons\\Rifle\\RifleImpact.mdl", 1900)
	set RANGED_B = herogenNewRanged(life, mana, damage, armor, attackspeed, movespeed, 600, 1, 0.15, "Abilities\\Weapons\\Axe\\AxeMissile.mdl", 1200)
	set RANGED_P = herogenNewRanged(life, mana, damage, armor, attackspeed, movespeed, 700, 2, 0.15, "Abilities\\Weapons\\Arrow\\ArrowMissile.mdl", 1200)
	set RANGED_M = herogenNewRanged(life, mana, damage, armor, attackspeed, movespeed, 500, 3, 0.00, "Abilities\\Weapons\\PriestMissile\\PriestMissile.mdl", 1200)
	set RANGED_F = herogenNewRanged(life, mana, damage, armor, attackspeed, movespeed, 500, 4, 0.15, "Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", 900)
	call put(0, 0, MELEE_N)
	call put(0, 1, MELEE_B)
	call put(0, 2, MELEE_P)
	call put(0, 3, MELEE_M)
	call put(0, 4, MELEE_F)
	call put(1, 0, MELEE_N)
	call put(1, 1, MELEE_B)
	call put(1, 2, MELEE_P)
	call put(1, 3, MELEE_M)
	call put(1, 4, MELEE_F)
	call put(2, 0, MELEE_N)
	call put(2, 1, MELEE_B)
	call put(2, 2, MELEE_P)
	call put(2, 3, MELEE_M)
	call put(2, 4, MELEE_F)
	call put(3, 0, MELEE_N)
	call put(3, 1, MELEE_B)
	call put(3, 2, MELEE_P)
	call put(3, 3, MELEE_M)
	call put(3, 4, MELEE_F)
	call put(4, 0, MELEE_N)
	call put(4, 1, MELEE_B)
	call put(4, 2, MELEE_P)
	call put(4, 3, MELEE_M)
	call put(4, 4, MELEE_F)
	call put(5, 0, RANGED_N)
	call put(5, 1, RANGED_B)
	call put(5, 2, RANGED_P)
	call put(5, 3, RANGED_M)
	call put(5, 4, RANGED_F)
	call put(6, 0, RANGED_N)
	call put(6, 1, RANGED_B)
	call put(6, 2, RANGED_P)
	call put(6, 3, RANGED_M)
	call put(6, 4, RANGED_F)
	call put(7, 0, RANGED_N)
	call put(7, 1, RANGED_B)
	call put(7, 2, RANGED_P)
	call put(7, 3, RANGED_M)
	call put(7, 4, RANGED_F)
endfunction

function alloc_HashMap takes nothing returns integer
	local integer this
	if HashMap_firstFree == 0 then
		set HashMap_maxIndex = HashMap_maxIndex + 1
		set this = HashMap_maxIndex
	else
		set HashMap_firstFree = HashMap_firstFree - 1
		set this = HashMap_nextFree[HashMap_firstFree]
	endif
	set HashMap_typeId[this] = 654
	return this
endfunction

function construct_HashMap takes integer this returns nothing
endfunction

function new_HashMap takes nothing returns integer
	local integer this = alloc_HashMap()
	call construct_HashMap(this)
	return this
endfunction

function init_HeroDummyGen takes nothing returns nothing
	set HeroDummyGen_HERO_DUMMY_DEFAULT_RAW = 1211117873
	set HeroDummyGen_HERO_TYPE = 0
	set HeroDummyGen_map = InitHashtable()
	set HeroDummyGen_morphAbilities = new_HashMap()
	set HeroDummyGen_unmorphAbilities = new_HashMap()
	set HeroDummyGen_morphAbilityBaseRaw = 1095577648
	set HeroDummyGen_heroDummyBaseRaw = HeroDummyGen_HERO_DUMMY_DEFAULT_RAW
	set HeroDummyGen_compiletimeMode = false
	call initHeroDummyLists()
endfunction

function alloc_LLEntry takes nothing returns integer
	local integer this
	if LLEntry_firstFree == 0 then
		set LLEntry_maxIndex = LLEntry_maxIndex + 1
		set this = LLEntry_maxIndex
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this = LLEntry_nextFree[LLEntry_firstFree]
	endif
	return this
endfunction

function construct_LLEntry takes integer this, integer elem, integer prev, integer next returns nothing
	set LLEntry_elem[this] = elem
	set LLEntry_prev[this] = prev
	set LLEntry_next[this] = next
endfunction

function new_LLEntry takes integer elem, integer prev, integer next returns integer
	local integer this = alloc_LLEntry()
	call construct_LLEntry(this, elem, prev, next)
	return this
endfunction

function LinkedList_add takes integer this, integer elem returns nothing
	local integer entry = new_LLEntry(elem, LLEntry_prev[LinkedList_dummy[this]], LinkedList_dummy[this])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this]]] = entry
	set LLEntry_prev[LinkedList_dummy[this]] = entry
	set LinkedList_size[this] = LinkedList_size[this] + 1
endfunction

function dispatch_LinkedList_add takes integer this, integer elem returns nothing
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.add")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.add on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_add(this, elem)
endfunction

function alloc_StatEntity takes nothing returns integer
	local integer this
	if StatEntity_firstFree == 0 then
		set StatEntity_maxIndex = StatEntity_maxIndex + 1
		set this = StatEntity_maxIndex
	else
		set StatEntity_firstFree = StatEntity_firstFree - 1
		set this = StatEntity_nextFree[StatEntity_firstFree]
	endif
	return this
endfunction

function construct_StatEntity takes integer this, integer stat, integer val returns nothing
	set StatEntity_stat[this] = stat
	set StatEntity_val[this] = val
endfunction

function new_StatEntity takes integer stat, integer val returns integer
	local integer this = alloc_StatEntity()
	call construct_StatEntity(this, stat, val)
	return this
endfunction

function StatList_add takes integer this, integer s, integer value returns nothing
	local integer temp = StatHandler_statType[s]
	if temp == 0 then
		call dispatch_LinkedList_add(StatList_statList[this], new_StatEntity(s, value))
	elseif temp == 1 then
		call dispatch_LinkedList_add(StatList_statList[this], new_StatEntity(s, value + 100))
	elseif temp == 2 then
		call dispatch_LinkedList_add(StatList_statList[this], new_StatEntity(s, 100 - value))
	endif
endfunction

function dispatch_StatList_add takes integer this, integer s, integer value returns nothing
	if StatList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling StatList.add")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called StatList.add on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call StatList_add(this, s, value)
endfunction

function alloc_StatList takes nothing returns integer
	local integer this
	if StatList_firstFree == 0 then
		set StatList_maxIndex = StatList_maxIndex + 1
		set this = StatList_maxIndex
	else
		set StatList_firstFree = StatList_firstFree - 1
		set this = StatList_nextFree[StatList_firstFree]
	endif
	set StatList_typeId[this] = 656
	return this
endfunction

function alloc_LinkedList takes nothing returns integer
	local integer this
	if LinkedList_firstFree == 0 then
		set LinkedList_maxIndex = LinkedList_maxIndex + 1
		set this = LinkedList_maxIndex
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this = LinkedList_nextFree[LinkedList_firstFree]
	endif
	set LinkedList_typeId[this] = 1
	return this
endfunction

function construct_LinkedList takes integer this returns nothing
	set LinkedList_size[this] = 0
	set LinkedList_dummy[this] = new_LLEntry(0, 0, 0)
	set LLEntry_next[LinkedList_dummy[this]] = LinkedList_dummy[this]
	set LLEntry_prev[LinkedList_dummy[this]] = LinkedList_dummy[this]
endfunction

function new_LinkedList takes nothing returns integer
	local integer this = alloc_LinkedList()
	call construct_LinkedList(this)
	return this
endfunction

function construct_StatList takes integer this returns nothing
	set StatList_statList[this] = new_LinkedList()
endfunction

function new_StatList takes nothing returns integer
	local integer this = alloc_StatList()
	call construct_StatList(this)
	return this
endfunction

function ItemTypeX_initPropertiesEquipment takes integer this, integer equipmentSlot, integer equipmentClass returns nothing
	if ItemTypeX_itemClass[this] != 0 then
		call printWarning("ItemTypeX.itemClass already set!")
	endif
	set ItemTypeX_itemClass[this] = 1
	set ItemTypeX_stats[this] = new_StatList()
endfunction

function dispatch_ItemTypeX_initPropertiesEquipment takes integer this, integer equipmentSlot, integer equipmentClass returns nothing
	if ItemTypeX_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ItemTypeX.initPropertiesEquipment")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ItemTypeX.initPropertiesEquipment on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ItemTypeX_initPropertiesEquipment(this, equipmentSlot, equipmentClass)
endfunction

function alloc_ItemTypeX takes nothing returns integer
	local integer this
	if ItemTypeX_firstFree == 0 then
		set ItemTypeX_maxIndex = ItemTypeX_maxIndex + 1
		set this = ItemTypeX_maxIndex
	else
		set ItemTypeX_firstFree = ItemTypeX_firstFree - 1
		set this = ItemTypeX_nextFree[ItemTypeX_firstFree]
	endif
	set ItemTypeX_typeId[this] = 673
	return this
endfunction

function construct_ItemTypeX takes integer this, integer raw returns nothing
	set ItemTypeX_itemClass[this] = ItemTypeX_itemClass[this]
endfunction

function new_ItemTypeX takes integer raw returns integer
	local integer this = alloc_ItemTypeX()
	call construct_ItemTypeX(this, raw)
	return this
endfunction

function tooltipAddEquipmentProperties takes integer equipmentSlot, integer equipmentClass returns nothing
	local integer temp
	set ItemTooltipGen_tooltipHeader = "|cB3B3B3"
	set temp = equipmentClass
	if temp == 0 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Sword"
	elseif temp == 1 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Axe"
	elseif temp == 2 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Dagger"
	elseif temp == 3 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Twohanded"
	elseif temp == 4 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Staff"
	elseif temp == 5 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Wand"
	elseif temp == 6 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Bow"
	elseif temp == 7 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Gun"
	elseif temp == 8 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Shield"
	elseif temp == 9 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Orb"
	elseif temp == 10 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Quiver"
	elseif temp == 11 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Knife"
	elseif temp == 12 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Chain"
	elseif temp == 13 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Leather"
	elseif temp == 14 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Cloth"
	elseif temp == 15 then
		set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "Accessory"
	endif
	set ItemTooltipGen_tooltipHeader = ItemTooltipGen_tooltipHeader + "|r"
endfunction

function tooltipColorizeItemName takes string itemName, integer equipmentQuality returns string
	local string name = ""
	local integer temp = equipmentQuality
	if temp == 0 then
		set name = itemName
	elseif temp == 1 then
		set name = "|c3B85ED " + itemName + "|r"
	elseif temp == 2 then
		set name = "|cD9A109 " + itemName + "|r"
	endif
	return name
endfunction

function tooltipGet takes nothing returns string
	local string tooltip = ""
	if ItemTooltipGen_tooltipHeader != "" then
		set tooltip = tooltip + ItemTooltipGen_tooltipHeader
	endif
	if ItemTooltipGen_tooltipStats != "" then
		if tooltip != "" then
			set tooltip = tooltip + "\n"
		endif
		set tooltip = tooltip + ItemTooltipGen_tooltipStats
	endif
	if ItemTooltipGen_tooltipDescription != "" then
		if tooltip != "" then
			set tooltip = tooltip + "\n"
		endif
		set tooltip = tooltip + ItemTooltipGen_tooltipDescription
	endif
	return tooltip
endfunction

function tooltipReset takes nothing returns nothing
	set ItemTooltipGen_tooltipHeader = ""
	set ItemTooltipGen_tooltipStats = ""
	set ItemTooltipGen_tooltipDescription = ""
endfunction

function itemgenNewEquipment takes integer raw, integer equipmentQuality, integer equipmentSlot, integer equipmentClass, string name, string description, string icon returns integer
	local string tt
	local integer receiver_key
	local integer receiver_key_2
	local integer receiver_key_3
	local integer receiver_key_4
	set ItemTypeGen_currentItemTypeX = new_ItemTypeX(raw)
	call dispatch_ItemTypeX_initPropertiesEquipment(ItemTypeGen_currentItemTypeX, equipmentSlot, equipmentClass)
	if ItemTypeGen_compiletimeMode then
		call tooltipReset()
		call tooltipAddEquipmentProperties(equipmentSlot, equipmentClass)
		set tt = tooltipGet()
		set receiver_key = createObjectDefinition("w3t", raw, 1667786099)
		call ObjectDefinition_setString(receiver_key, "unam", tooltipColorizeItemName(name, equipmentQuality))
		set receiver_key_2 = receiver_key
		call ObjectDefinition_setString(receiver_key_2, "iico", icon)
		set receiver_key_3 = receiver_key_2
		call ObjectDefinition_setString(receiver_key_3, "utub", tt)
		set receiver_key_4 = receiver_key_3
		call ObjectDefinition_setString(receiver_key_4, "ides", tt)
		set ItemTypeGen_currentObjectDefinition_key = receiver_key_4
	endif
	return raw
endfunction

function LLIterator_onDestroy takes integer this returns nothing
endfunction

function dealloc_LLIterator takes integer obj returns nothing
	if LLIterator_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type LLIterator")
		call I2S(1 / 0)
	else
		set LLIterator_nextFree[LLIterator_firstFree] = obj
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[obj] = 0
	endif
endfunction

function destroyLLIterator takes integer this returns nothing
	call LLIterator_onDestroy(this)
	call dealloc_LLIterator(this)
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this returns nothing
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.destroyLLIterator")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.destroyLLIterator on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyLLIterator(this)
endfunction

function LLIterator_close takes integer this returns nothing
	call dispatch_LLIterator_destroyLLIterator(this)
endfunction

function dispatch_LLIterator_close takes integer this returns nothing
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.close")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.close on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call LLIterator_close(this)
endfunction

function StatListIterator_close takes integer this returns nothing
	call dispatch_LLIterator_close(StatListIterator_iter[this])
endfunction

function dispatch_StatListIterator_close takes integer this returns nothing
	if StatListIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling StatListIterator.close")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called StatListIterator.close on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call StatListIterator_close(this)
endfunction

function StatListIterator_currentValue takes integer this returns integer
	local integer val = 0
	local integer temp = StatHandler_statType[StatEntity_stat[StatListIterator_current[this]]]
	if temp == 0 then
		set val = StatEntity_val[StatListIterator_current[this]]
	elseif temp == 1 then
		set val = StatEntity_val[StatListIterator_current[this]] - 100
	elseif temp == 2 then
		set val = 100 - StatEntity_val[StatListIterator_current[this]]
	endif
	return val
endfunction

function dispatch_StatListIterator_currentValue takes integer this returns integer
	local integer currentValue_result
	if StatListIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling StatListIterator.currentValue")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called StatListIterator.currentValue on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set currentValue_result = StatListIterator_currentValue(this)
	return currentValue_result
endfunction

function LLIterator_hasNext takes integer this returns boolean
	return LLEntry_next[LLIterator_current[this]] != LLIterator_dummy[this]
endfunction

function dispatch_LLIterator_hasNext takes integer this returns boolean
	local boolean hasNext_result
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.hasNext")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.hasNext on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = LLIterator_hasNext(this)
	return hasNext_result
endfunction

function StatListIterator_hasNext takes integer this returns boolean
	return dispatch_LLIterator_hasNext(StatListIterator_iter[this])
endfunction

function dispatch_StatListIterator_hasNext takes integer this returns boolean
	local boolean hasNext_result
	if StatListIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling StatListIterator.hasNext")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called StatListIterator.hasNext on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = StatListIterator_hasNext(this)
	return hasNext_result
endfunction

function LLIterator_next takes integer this returns integer
	set LLIterator_current[this] = LLEntry_next[LLIterator_current[this]]
	return LLEntry_elem[LLIterator_current[this]]
endfunction

function dispatch_LLIterator_next takes integer this returns integer
	local integer next_result
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.next")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.next on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set next_result = LLIterator_next(this)
	return next_result
endfunction

function StatListIterator_next takes integer this returns integer
	set StatListIterator_current[this] = dispatch_LLIterator_next(StatListIterator_iter[this])
	return StatEntity_stat[StatListIterator_current[this]]
endfunction

function dispatch_StatListIterator_next takes integer this returns integer
	local integer next_result
	if StatListIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling StatListIterator.next")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called StatListIterator.next on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set next_result = StatListIterator_next(this)
	return next_result
endfunction

function alloc_StatListIterator takes nothing returns integer
	local integer this
	if StatListIterator_firstFree == 0 then
		set StatListIterator_maxIndex = StatListIterator_maxIndex + 1
		set this = StatListIterator_maxIndex
	else
		set StatListIterator_firstFree = StatListIterator_firstFree - 1
		set this = StatListIterator_nextFree[StatListIterator_firstFree]
	endif
	set StatListIterator_typeId[this] = 657
	return this
endfunction

function alloc_LLIterator takes nothing returns integer
	local integer this
	if LLIterator_firstFree == 0 then
		set LLIterator_maxIndex = LLIterator_maxIndex + 1
		set this = LLIterator_maxIndex
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this = LLIterator_nextFree[LLIterator_firstFree]
	endif
	set LLIterator_typeId[this] = 3
	return this
endfunction

function construct_LLIterator takes integer this, integer dummy returns nothing
	set LLIterator_dummy[this] = dummy
	set LLIterator_current[this] = dummy
endfunction

function new_LLIterator takes integer dummy returns integer
	local integer this = alloc_LLIterator()
	call construct_LLIterator(this, dummy)
	return this
endfunction

function LinkedList_iterator takes integer this returns integer
	return new_LLIterator(LinkedList_dummy[this])
endfunction

function dispatch_LinkedList_iterator takes integer this returns integer
	local integer iterator_result
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.iterator")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.iterator on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = LinkedList_iterator(this)
	return iterator_result
endfunction

function construct_StatListIterator takes integer this, integer statList returns nothing
	set StatListIterator_iter[this] = dispatch_LinkedList_iterator(StatList_statList[statList])
endfunction

function new_StatListIterator takes integer statList returns integer
	local integer this = alloc_StatListIterator()
	call construct_StatListIterator(this, statList)
	return this
endfunction

function StatList_iterator takes integer this returns integer
	return new_StatListIterator(this)
endfunction

function dispatch_StatList_iterator takes integer this returns integer
	local integer iterator_result
	if StatList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling StatList.iterator")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called StatList.iterator on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = StatList_iterator(this)
	return iterator_result
endfunction

function tooltipConvertStat takes integer stat, integer value returns string
	local string name = ""
	local integer valueConverted = value
	local string sign = "+"
	local string suffix = ""
	local integer temp = stat
	if temp == 0 then
		set name = "Life"
	elseif temp == 1 then
		set name = "Mana"
	elseif temp == 2 then
		set name = "Lifereg"
	elseif temp == 3 then
		set name = "Manareg"
	elseif temp == 4 then
		set name = "Str"
	elseif temp == 5 then
		set name = "Agi"
	elseif temp == 6 then
		set name = "Int"
	elseif temp == 7 then
		set name = "Damage"
	elseif temp == 8 then
		set name = "Damage"
		set suffix = "%"
	elseif temp == 9 then
		set name = "Armor"
	elseif temp == 10 then
		set name = "Aspd"
		set suffix = "%"
	elseif temp == 11 then
		set name = "Movespeed"
	elseif temp == 12 then
		set name = "Evasion"
		set suffix = "%"
	elseif temp == 13 then
		set name = "Critchance"
		set suffix = "%"
	elseif temp == 14 then
		set name = "Critdamage"
		set suffix = "%"
	elseif temp == 15 then
		set name = "Critbonus"
	elseif temp == 16 then
		set name = "Heal Received"
		set suffix = "%"
	endif
	return name + " " + sign + int_toString(valueConverted) + suffix
endfunction

function tooltipAddStatList takes integer statList returns nothing
	local integer iter = dispatch_StatList_iterator(statList)
	local integer s
	loop
		exitwhen  not dispatch_StatListIterator_hasNext(iter)
		set s = dispatch_StatListIterator_next(iter)
		if ItemTooltipGen_tooltipStats != "" then
			set ItemTooltipGen_tooltipStats = ItemTooltipGen_tooltipStats + "\n"
		endif
		set ItemTooltipGen_tooltipStats = ItemTooltipGen_tooltipStats + tooltipConvertStat(s, dispatch_StatListIterator_currentValue(iter))
	endloop
	call dispatch_StatListIterator_close(iter)
endfunction

function itemgenSetStats takes integer statList returns nothing
	local string tt
	if ItemTypeGen_compiletimeMode then
		call tooltipAddStatList(statList)
		set tt = tooltipGet()
		call ObjectDefinition_setString(ItemTypeGen_currentObjectDefinition_key, "utub", tt)
		call ObjectDefinition_setString(ItemTypeGen_currentObjectDefinition_key, "ides", tt)
	endif
endfunction

function stats takes nothing returns integer
	return ItemTypeX_stats[ItemTypeGen_currentItemTypeX]
endfunction

function initItemTypeLists takes nothing returns nothing
	local integer receiver
	local integer receiver_2
	local integer receiver_3
	local integer receiver_4
	local integer receiver_5
	local integer receiver_6
	local integer receiver_7
	local integer receiver_8
	local integer receiver_9
	local integer receiver_10
	call itemgenNewEquipment(1227894832, 0, 0, 0, "Runesword", "Just some old sword", "ReplaceableTextures\\CommandButtons\\BTNClawsOfAttack.blp")
	set receiver = stats()
	call dispatch_StatList_add(receiver, 7, 4)
	set receiver_2 = receiver
	call dispatch_StatList_add(receiver_2, 8, 20)
	set receiver_3 = receiver_2
	call dispatch_StatList_add(receiver_3, 13, 5)
	call itemgenSetStats(receiver_3)
	call itemgenNewEquipment(1227894833, 1, 0, 6, "Elunes Bow", "A magic bow that glows in the dark", "ReplaceableTextures\\CommandButtons\\BTNMarksmanship.blp")
	set receiver_4 = stats()
	call dispatch_StatList_add(receiver_4, 7, 6)
	set receiver_5 = receiver_4
	call dispatch_StatList_add(receiver_5, 5, 3)
	set receiver_6 = receiver_5
	call dispatch_StatList_add(receiver_6, 14, 20)
	call itemgenSetStats(receiver_6)
	call itemgenNewEquipment(1227894834, 2, 3, 14, "Rogues mask", "Looks totally badass", "ReplaceableTextures\\CommandButtons\\BTNSobiMask.blp")
	set receiver_7 = stats()
	call dispatch_StatList_add(receiver_7, 9, 2)
	set receiver_8 = receiver_7
	call dispatch_StatList_add(receiver_8, 0, 20)
	set receiver_9 = receiver_8
	call dispatch_StatList_add(receiver_9, 1, 10)
	set receiver_10 = receiver_9
	call dispatch_StatList_add(receiver_10, 12, 6)
	call itemgenSetStats(receiver_10)
endfunction

function init_ItemTypeGen takes nothing returns nothing
	set ItemTypeGen_compiletimeMode = false
	call initItemTypeLists()
endfunction

function init_ItemX takes nothing returns nothing
endfunction

function region_addRect takes region this, rect r returns nothing
	call RegionAddRect(this, r)
endfunction

function init_MapBounds takes nothing returns nothing
	local region receiver
	local real temp_MapBounds_mapCenter_x
	local real temp_MapBounds_mapCenter_y
	set MapBounds_mapRect = GetPlayableMapRect()
	set receiver = CreateRegion()
	call region_addRect(receiver, MapBounds_mapRect)
	set MapBounds_mapMinX = GetRectMinX(MapBounds_mapRect)
	set MapBounds_mapMinY = GetRectMinY(MapBounds_mapRect)
	set MapBounds_mapMaxX = GetRectMaxX(MapBounds_mapRect)
	set MapBounds_mapMaxY = GetRectMaxY(MapBounds_mapRect)
	set temp_MapBounds_mapCenter_x = (MapBounds_mapMaxX + MapBounds_mapMinX) / 2.
	set temp_MapBounds_mapCenter_y = (MapBounds_mapMinY + MapBounds_mapMaxY) / 2.
	set receiver = null
endfunction

function trigger_registerPlayerChatEvent takes trigger this, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns nothing
	call TriggerRegisterPlayerChatEvent(this, whichPlayer, chatMessageToDetect, exactMatchOnly)
endfunction

function chatEvent takes string s, code c returns nothing
	local trigger receiver = CreateTrigger()
	local trigger receiver_2
	call trigger_registerPlayerChatEvent(receiver, Player(0), s, true)
	set receiver_2 = receiver
	call trigger_addAction(receiver_2, c)
	set receiver = null
	set receiver_2 = null
endfunction

function int_getUnitTypeX takes integer this returns integer
	return dispatch_HashMap_get(UnitTypeX_raw2UnitType, this)
endfunction

function alloc_CreepUnitX takes nothing returns integer
	local integer this
	if UnitX_firstFree == 0 then
		set UnitX_maxIndex = UnitX_maxIndex + 1
		set this = UnitX_maxIndex
	else
		set UnitX_firstFree = UnitX_firstFree - 1
		set this = UnitX_nextFree[UnitX_firstFree]
	endif
	set UnitX_typeId[this] = 671
	return this
endfunction

function angle_degrees takes real this_radians returns real
	return this_radians * Maths_RADTODEG
endfunction

function createUnit takes player p, integer unitId, real pos_x, real pos_y, real facing_radians returns unit
	return CreateUnit(p, unitId, pos_x, pos_y, angle_degrees(facing_radians))
endfunction

function alloc_UnitDamageHandler takes nothing returns integer
	local integer this
	if UnitDamageHandler_firstFree == 0 then
		set UnitDamageHandler_maxIndex = UnitDamageHandler_maxIndex + 1
		set this = UnitDamageHandler_maxIndex
	else
		set UnitDamageHandler_firstFree = UnitDamageHandler_firstFree - 1
		set this = UnitDamageHandler_nextFree[UnitDamageHandler_firstFree]
	endif
	return this
endfunction

function UnitX_getUnit takes integer this returns unit
	return UnitX_u[this]
endfunction

function dispatch_UnitX_getUnit takes integer this returns unit
	local unit getUnit_result
	if UnitX_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitX.getUnit")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitX.getUnit on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if UnitX_typeId[this] <= 665 then
		set getUnit_result = UnitX_getUnit(this)
	else
		set getUnit_result = UnitX_getUnit(this)
	endif
	set dispatch_UnitX_getUnittempReturn = getUnit_result
	set getUnit_result = null
	return dispatch_UnitX_getUnittempReturn
endfunction

function trigger_registerUnitEvent takes trigger this, unit whichUnit, unitevent whichEvent returns nothing
	call TriggerRegisterUnitEvent(this, whichUnit, whichEvent)
endfunction

function construct_UnitDamageHandler takes integer this, integer unitX, integer damageType returns nothing
	set UnitDamageHandler_parent[this] = unitX
	set UnitDamageHandler_damageType[this] = damageType
	call trigger_registerUnitEvent(DamageHandler_unitAttackTrigger, dispatch_UnitX_getUnit(UnitDamageHandler_parent[this]), EVENT_UNIT_DAMAGED)
endfunction

function new_UnitDamageHandler takes integer unitX, integer damageType returns integer
	local integer this = alloc_UnitDamageHandler()
	call construct_UnitDamageHandler(this, unitX, damageType)
	return this
endfunction

function alloc_UnitStatBuffer takes nothing returns integer
	local integer this
	if UnitStatBuffer_firstFree == 0 then
		set UnitStatBuffer_maxIndex = UnitStatBuffer_maxIndex + 1
		set this = UnitStatBuffer_maxIndex
	else
		set UnitStatBuffer_firstFree = UnitStatBuffer_firstFree - 1
		set this = UnitStatBuffer_nextFree[UnitStatBuffer_firstFree]
	endif
	set UnitStatBuffer_typeId[this] = 659
	return this
endfunction

function UnitBaseStatBuffer_getStatRaw takes integer this, integer s returns integer
	return UnitBaseStatBuffer_stats[UnitBaseStatBuffer_arrayStart[this] + s]
endfunction

function dispatch_UnitBaseStatBuffer_getStatRaw takes integer this, integer s returns integer
	local integer getStatRaw_result
	if UnitBaseStatBuffer_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitBaseStatBuffer.getStatRaw")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitBaseStatBuffer.getStatRaw on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getStatRaw_result = UnitBaseStatBuffer_getStatRaw(this, s)
	return getStatRaw_result
endfunction

function UnitStatBuffer_reset takes integer this, unit u, integer baseStatBuffer returns nothing
	local integer n
	local integer temp
	local integer tempIndex
	if baseStatBuffer == 0 then
		set UnitStatBuffer_baseStats[this] = StatHandler_DEFAULT_BASE_STAT_BUFFER
	else
		set UnitStatBuffer_baseStats[this] = baseStatBuffer
	endif
	set UnitStatBuffer_arrayStart[this] = 1 + (this - 1) * StatHandler_numStats
	set n = 0
	set temp = StatHandler_numStats
	loop
		exitwhen n > temp
		set UnitStatBuffer_cacheDirty[UnitStatBuffer_arrayStart[this] + n] = true
		if StatHandler_statType[n] == 0 then
			set UnitStatBuffer_statsAbs[UnitStatBuffer_arrayStart[this] + n] = dispatch_UnitBaseStatBuffer_getStatRaw(UnitStatBuffer_baseStats[this], n)
		else
			set tempIndex = UnitStatBuffer_arrayStart[this] + n
			set UnitStatBuffer_statsPerc[tempIndex] = dispatch_UnitBaseStatBuffer_getStatRaw(UnitStatBuffer_baseStats[this], n)
			set UnitStatBuffer_statsPerc_2[tempIndex] = 100
		endif
		set n = n + 1
	endloop
endfunction

function dispatch_UnitStatBuffer_reset takes integer this, unit u, integer baseStatBuffer returns nothing
	if UnitStatBuffer_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitStatBuffer.reset")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitStatBuffer.reset on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitStatBuffer_reset(this, u, baseStatBuffer)
endfunction

function construct_UnitStatBuffer takes integer this, unit u, integer baseStats returns nothing
	set StatHandler_mapUnitStatBuffers[getUnitIndex(u)] = this
	call dispatch_UnitStatBuffer_reset(this, u, baseStats)
endfunction

function new_UnitStatBuffer takes unit u, integer baseStats returns integer
	local integer this = alloc_UnitStatBuffer()
	call construct_UnitStatBuffer(this, u, baseStats)
	return this
endfunction

function unit_setUserData takes unit this, integer data returns nothing
	call SetUnitUserData(this, data)
endfunction

function construct_UnitX takes integer this, player owner, integer unitTypeX, real pos_x, real pos_y, real facing_radians returns nothing
	set UnitX_u[this] = createUnit(owner, UnitTypeX_raw[unitTypeX], pos_x, pos_y, facing_radians)
	call unit_setUserData(UnitX_u[this], this)
	set UnitX_unitStatBuffer[this] = new_UnitStatBuffer(UnitX_u[this], UnitTypeX_unitBaseStatBuffer[unitTypeX])
	set UnitX_unitDamageHandler[this] = new_UnitDamageHandler(this, UnitTypeX_damageType[unitTypeX])
endfunction

function alloc_ThreatHandlerTU takes nothing returns integer
	local integer this
	if ThreatHandlerTU_firstFree == 0 then
		set ThreatHandlerTU_maxIndex = ThreatHandlerTU_maxIndex + 1
		set this = ThreatHandlerTU_maxIndex
	else
		set ThreatHandlerTU_firstFree = ThreatHandlerTU_firstFree - 1
		set this = ThreatHandlerTU_nextFree[ThreatHandlerTU_firstFree]
	endif
	set ThreatHandlerTU_typeId[this] = 668
	return this
endfunction

function boolean_toString takes boolean this returns string
	if this then
		return "true"
	endif
	return "false"
endfunction

function unit_getName takes unit this returns string
	return GetUnitName(this)
endfunction

function ThreatHandlerCamp_add takes integer this, integer tu returns nothing
	if ThreatHandlerTU_camp[tu] != 0 then
		call printWarning("ThreatHandlerCamp.add(ThreatHandlerTU tu): " + unit_getName(ThreatHandlerTU_u[tu]) + " already has a camp assigned.")
	endif
	set ThreatHandlerTU_campPrev[tu] = ThreatHandlerTU_campPrev[ThreatHandlerCamp_dummy[this]]
	set ThreatHandlerTU_campNext[tu] = ThreatHandlerCamp_dummy[this]
	set ThreatHandlerTU_campNext[ThreatHandlerTU_campPrev[ThreatHandlerCamp_dummy[this]]] = tu
	set ThreatHandlerTU_campPrev[ThreatHandlerCamp_dummy[this]] = tu
	set ThreatHandlerTU_camp[tu] = this
endfunction

function dispatch_ThreatHandlerCamp_add takes integer this, integer tu returns nothing
	if ThreatHandlerCamp_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ThreatHandlerCamp.add")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ThreatHandlerCamp.add on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call ThreatHandlerCamp_add(this, tu)
endfunction

function group_clear takes group this returns nothing
	call GroupClear(this)
endfunction

function alloc_ThreatHandlerCamp takes nothing returns integer
	local integer this
	if ThreatHandlerCamp_firstFree == 0 then
		set ThreatHandlerCamp_maxIndex = ThreatHandlerCamp_maxIndex + 1
		set this = ThreatHandlerCamp_maxIndex
	else
		set ThreatHandlerCamp_firstFree = ThreatHandlerCamp_firstFree - 1
		set this = ThreatHandlerCamp_nextFree[ThreatHandlerCamp_firstFree]
	endif
	set ThreatHandlerCamp_typeId[this] = 666
	return this
endfunction

function construct_ThreatHandlerTU takes integer this returns nothing
	set ThreatHandlerTU_campPrev[this] = this
	set ThreatHandlerTU_campNext[this] = this
	set ThreatHandlerTU_camp[this] = 0
endfunction

function new_ThreatHandlerTU takes nothing returns integer
	local integer this = alloc_ThreatHandlerTU()
	call construct_ThreatHandlerTU(this)
	return this
endfunction

function construct_ThreatHandlerCamp takes integer this returns nothing
	set ThreatHandlerCamp_icListId[this] = 0
	set ThreatHandlerCamp_dummy[this] = new_ThreatHandlerTU()
	set ThreatHandlerCamp_state[this] = 0
endfunction

function new_ThreatHandlerCamp takes nothing returns integer
	local integer this = alloc_ThreatHandlerCamp()
	call construct_ThreatHandlerCamp(this)
	return this
endfunction

function construct_ThreatListEntry_2 takes integer this returns nothing
	set ThreatListEntry_tuPrev[this] = this
	set ThreatListEntry_tuNext[this] = this
	set ThreatListEntry_tuPrev[this] = this
	set ThreatListEntry_tuNext[this] = this
	set ThreatListEntry_threat[this] = 100000000.
	set ThreatListEntry_pu[this] = 0
	set ThreatListEntry_tu[this] = 0
endfunction

function new_ThreatListEntry_2 takes nothing returns integer
	local integer this = alloc_ThreatListEntry()
	call construct_ThreatListEntry_2(this)
	return this
endfunction

function unit_getPos takes unit this returns real
	set unit_getPos_return_x = unit_getX(this)
	set unit_getPos_return_y = unit_getY(this)
	return unit_getPos_return_x
endfunction

function construct_ThreatHandlerTU_2 takes integer this, unit u returns nothing
	local trigger receiver
	local trigger receiver_2
	local trigger receiver_3
	local unit other
	local integer otherTu
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_1
	local real temp_tempTupleSelectionResult_2
	local real tempTupleSelectionResult_2
	local real temp_tempTupleSelectionResult_1_2
	local real temp_tempTupleSelectionResult_2_2
	local group temp
	local real temp_2
	set ThreatHandlerTU_state[this] = 0
	set ThreatHandlerTU_u[this] = u
	set tempIndex = this
	set ThreatHandlerTU_campPos[tempIndex] = unit_getPos(u)
	set ThreatHandlerTU_campPos_2[tempIndex] = unit_getPos_return_y
	set ThreatHandlerTU_dummy[this] = new_ThreatListEntry_2()
	set receiver = CreateTrigger()
	call trigger_registerUnitEvent(receiver, u, EVENT_UNIT_ISSUED_TARGET_ORDER)
	set receiver_2 = receiver
	call trigger_registerUnitEvent(receiver_2, u, EVENT_UNIT_ACQUIRED_TARGET)
	set receiver_3 = receiver_2
	call trigger_addAction(receiver_3, ref_function_acquireTarget)
	set temp = TempGroups_ENUM_GROUP
	set temp_tempTupleSelectionResult_1 = unit_getPos(u)
	set temp_tempTupleSelectionResult_2 = unit_getPos_return_y
	set tempTupleSelectionResult_1 = temp_tempTupleSelectionResult_1
	set temp_2 = tempTupleSelectionResult_1
	set temp_tempTupleSelectionResult_1_2 = unit_getPos(u)
	set temp_tempTupleSelectionResult_2_2 = unit_getPos_return_y
	set tempTupleSelectionResult_2 = temp_tempTupleSelectionResult_2_2
	call GroupEnumUnitsInRange(temp, temp_2, tempTupleSelectionResult_2, ThreatHandlerConfig_CAMP_RANGE, Condition(ref_function_closure_impl))
	set other = FirstOfGroup(TempGroups_ENUM_GROUP)
	if other != null then
		set otherTu = getThreatUnit(other)
		call print("otherTu null: " + boolean_toString(otherTu == 0))
		call print("otherTu.camp null: " + boolean_toString(ThreatHandlerTU_camp[otherTu] == 0))
		call print("this null: " + boolean_toString(this == 0))
		call dispatch_ThreatHandlerCamp_add(ThreatHandlerTU_camp[otherTu], this)
	else
		call dispatch_ThreatHandlerCamp_add(new_ThreatHandlerCamp(), this)
	endif
	call group_clear(TempGroups_ENUM_GROUP)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set other = null
	set temp = null
endfunction

function new_ThreatHandlerTU_2 takes unit u returns integer
	local integer this = alloc_ThreatHandlerTU()
	call construct_ThreatHandlerTU_2(this, u)
	return this
endfunction

function construct_CreepUnitX takes integer this, integer unitTypeX, real pos_x, real pos_y, real facing_radians returns nothing
	call construct_UnitX(this, Player(PLAYER_NEUTRAL_AGGRESSIVE), unitTypeX, pos_x, pos_y, facing_radians)
	set CreepUnitX_tu[this] = new_ThreatHandlerTU_2(UnitX_u[this])
endfunction

function new_CreepUnitX takes integer unitTypeX, real pos_x, real pos_y, real facing_radians returns integer
	local integer this = alloc_CreepUnitX()
	call construct_CreepUnitX(this, unitTypeX, pos_x, pos_y, facing_radians)
	return this
endfunction

function alloc_HeroUnitX takes nothing returns integer
	local integer this
	if UnitX_firstFree == 0 then
		set UnitX_maxIndex = UnitX_maxIndex + 1
		set this = UnitX_maxIndex
	else
		set UnitX_firstFree = UnitX_firstFree - 1
		set this = UnitX_nextFree[UnitX_firstFree]
	endif
	set UnitX_typeId[this] = 665
	return this
endfunction

function getUnitTypeHero takes nothing returns integer
	if HeroDummyGen_HERO_TYPE == 0 then
		call printWarning("APT.units.hero.lists.HeroTypeList: HERO_TYPE is null")
	endif
	return HeroDummyGen_HERO_TYPE
endfunction

function alloc_ThreatHandlerPU takes nothing returns integer
	local integer this
	if ThreatHandlerPU_firstFree == 0 then
		set ThreatHandlerPU_maxIndex = ThreatHandlerPU_maxIndex + 1
		set this = ThreatHandlerPU_maxIndex
	else
		set ThreatHandlerPU_firstFree = ThreatHandlerPU_firstFree - 1
		set this = ThreatHandlerPU_nextFree[ThreatHandlerPU_firstFree]
	endif
	set ThreatHandlerPU_typeId[this] = 667
	return this
endfunction

function construct_ThreatHandlerPU takes integer this, unit u returns nothing
	set ThreatHandlerPU_u[this] = u
	set ThreatHandlerPU_dummy[this] = new_ThreatListEntry_2()
endfunction

function new_ThreatHandlerPU takes unit u returns integer
	local integer this = alloc_ThreatHandlerPU()
	call construct_ThreatHandlerPU(this, u)
	return this
endfunction

function construct_HeroUnitX takes integer this, player owner, real pos_x, real pos_y, real facing_radians returns nothing
	call construct_UnitX(this, owner, getUnitTypeHero(), pos_x, pos_y, facing_radians)
	set HeroUnitX_pu[this] = new_ThreatHandlerPU(UnitX_u[this])
endfunction

function new_HeroUnitX takes player owner, real pos_x, real pos_y, real facing_radians returns integer
	local integer this = alloc_HeroUnitX()
	call construct_HeroUnitX(this, owner, pos_x, pos_y, facing_radians)
	return this
endfunction

function alloc_PlayerX takes nothing returns integer
	local integer this
	if PlayerX_firstFree == 0 then
		set PlayerX_maxIndex = PlayerX_maxIndex + 1
		set this = PlayerX_maxIndex
	else
		set PlayerX_firstFree = PlayerX_firstFree - 1
		set this = PlayerX_nextFree[PlayerX_firstFree]
	endif
	return this
endfunction

function construct_PlayerX takes integer this, integer playerId returns nothing
endfunction

function new_PlayerX takes integer playerId returns integer
	local integer this = alloc_PlayerX()
	call construct_PlayerX(this, playerId)
	return this
endfunction

function init_Maptest takes nothing returns nothing
	call new_PlayerX(0)
	call new_CreepUnitX(int_getUnitTypeX(1747988528), 1000., 0., 0.)
	set Maptest_hero = new_HeroUnitX(Player(0), 0., 0., 0.)
	call new_HeroUnitX(Player(0), 0., 50., 0.)
	call chatEvent("-morph 1", ref_function_closure_impl_5)
	call chatEvent("-morph 1", ref_function_closure_impl_6)
	call print("Finished init!")
endfunction

function init_Maths takes nothing returns nothing
	set Maths_RADTODEG = 57.295779513
endfunction

function init_ObjectIds takes nothing returns nothing
	set ObjectIds_charMap = ".................................!.#$%&'()*+,-./0123456789:;<=>.@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
endfunction

function init_PrintingHelper takes nothing returns nothing
	local trigger t
	local integer i
	set PrintingHelper_DEBUG_MSG_DURATION = 45.
	set t = CreateTrigger()
	call trigger_addAction(t, ref_function_switchDebug)
	set i = 0
	loop
		exitwhen i > 11
		set PrintingHelper_wantDebug[i] = false
		call trigger_registerPlayerChatEvent(t, Player(i), "-d", true)
		set i = i + 1
	endloop
	set t = null
endfunction

function init_Rational takes nothing returns nothing
endfunction

function init_Rect takes nothing returns nothing
	call new_Table()
endfunction

function init_Region takes nothing returns nothing
	call new_Table()
endfunction

function alloc_Closure takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_2 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_3 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_4 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_5 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_6 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_7 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_8 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_9 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_10 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function alloc_Closure_11 takes nothing returns integer
	local integer this
	if StatChangedEvent_firstFree == 0 then
		set StatChangedEvent_maxIndex = StatChangedEvent_maxIndex + 1
		set this = StatChangedEvent_maxIndex
	else
		set StatChangedEvent_firstFree = StatChangedEvent_firstFree - 1
		set this = StatChangedEvent_nextFree[StatChangedEvent_firstFree]
	endif
	return this
endfunction

function registerStatExp takes integer stat returns nothing
	set StatHandler_statType[stat] = 1
	set StatHandler_statSubstat[stat] = -1
	set StatHandler_numStats = StatHandler_numStats + 1
endfunction

function registerStatExp_2 takes integer stat, integer statChangedEvent returns nothing
	call registerStatExp(stat)
endfunction

function registerStatLin takes integer stat returns nothing
	set StatHandler_statType[stat] = 0
	set StatHandler_statSubstat[stat] = -1
	set StatHandler_numStats = StatHandler_numStats + 1
endfunction

function registerStatLin_2 takes integer stat, integer statChangedEvent returns nothing
	call registerStatLin(stat)
endfunction

function registerStatLinExp takes integer stat, integer substat returns nothing
	call registerStatLin(stat)
	call registerStatExp(substat)
	set StatHandler_statSubstat[stat] = substat
endfunction

function registerStatLinExp_2 takes integer stat, integer substat, integer statChangedEvent returns nothing
	call registerStatLinExp(stat, substat)
endfunction

function registerStatLog takes integer stat returns nothing
	set StatHandler_statType[stat] = 2
	set StatHandler_statSubstat[stat] = -1
	set StatHandler_numStats = StatHandler_numStats + 1
endfunction

function statRegistry takes nothing returns nothing
	local integer clVar = alloc_Closure_4()
	local integer clVar_2
	local integer clVar_3
	local integer clVar_4
	local integer clVar_5
	local integer clVar_6
	local integer clVar_7
	local integer clVar_8
	local integer clVar_9
	local integer clVar_10
	local integer clVar_11
	call registerStatLin_2(0, clVar)
	set clVar_2 = alloc_Closure_6()
	call registerStatLin_2(1, clVar_2)
	set clVar_3 = alloc_Closure_10()
	call registerStatLin_2(2, clVar_3)
	set clVar_4 = alloc_Closure_8()
	call registerStatLin_2(3, clVar_4)
	set clVar_5 = alloc_Closure()
	call registerStatLin_2(4, clVar_5)
	set clVar_6 = alloc_Closure_2()
	call registerStatLin_2(5, clVar_6)
	set clVar_7 = alloc_Closure_3()
	call registerStatLin_2(6, clVar_7)
	set clVar_8 = alloc_Closure_7()
	call registerStatLinExp_2(7, 8, clVar_8)
	set clVar_9 = alloc_Closure_5()
	call registerStatLin_2(9, clVar_9)
	set clVar_10 = alloc_Closure_11()
	call registerStatExp_2(10, clVar_10)
	set clVar_11 = alloc_Closure_9()
	call registerStatLin_2(11, clVar_11)
	call registerStatLog(12)
	call registerStatLog(13)
	call registerStatExp(14)
	call registerStatLin(15)
	call registerStatExp(16)
endfunction

function init_StatHandler takes nothing returns nothing
	set StatHandler_numStats = 0
	set StatHandler_mapBaseStatBuffers = new_HashMap()
	call statRegistry()
	set StatHandler_DEFAULT_BASE_STAT_BUFFER = new_UnitBaseStatBuffer(0)
endfunction

function string_length takes string this returns integer
	return StringLength(this)
endfunction

function init_String takes nothing returns nothing
	set String_charset = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	set String_numberset = "0123456789"
	call string_length(String_numberset)
	call string_length(String_charset)
endfunction

function init_Table takes nothing returns nothing
	set Table_ht = InitHashtable()
endfunction

function init_TempGroups takes nothing returns nothing
	set TempGroups_ENUM_GROUP = CreateGroup()
endfunction

function init_Terrain takes nothing returns nothing
	local real temp_Terrain_tempPos_x
	local real temp_Terrain_tempPos_y
	set Terrain_DUMMY_ITEM_ID = 2003790951
	call Location(0., 0.)
	set Terrain_dItem = null
	set Terrain_hidMax = 0
	set temp_Terrain_tempPos_x = 0.
	set temp_Terrain_tempPos_y = 0.
	call Rect(0., 0., 128., 128.)
	set Terrain_dItem = CreateItem(Terrain_DUMMY_ITEM_ID, 0., 0.)
	call SetItemVisible(Terrain_dItem, false)
endfunction

function trigger_registerPlayerUnitEvent takes trigger this, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter returns nothing
	call TriggerRegisterPlayerUnitEvent(this, whichPlayer, whichPlayerUnitEvent, filter)
endfunction

function init_TestUtils takes nothing returns nothing
	local trigger receiver
	local trigger receiver_2
	local trigger receiver_3
	call chatEvent("-testutils", ref_function_closure_impl_2)
	set receiver = CreateTrigger()
	call trigger_registerPlayerUnitEvent(receiver, Player(0), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, null)
	set receiver_2 = receiver
	call trigger_addAction(receiver_2, ref_function_closure_impl_3)
	set receiver_3 = receiver_2
	call trigger_disable(receiver_3)
	set TestUtils_smartCoordsTrigger = receiver_3
	call chatEvent("-testutils smartcoords", ref_function_closure_impl_4)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
endfunction

function timer_startPeriodic takes timer this, real time, code timerCallBack returns nothing
	call TimerStart(this, time, true, timerCallBack)
endfunction

function init_ThreatHandler takes nothing returns nothing
	set ThreatHandler_ht = InitHashtable()
	set ThreatHandler_icListLast = 0
	call timer_startPeriodic(CreateTimer(), 0.5, ref_function_update)
endfunction

function init_ThreatHandlerConfig takes nothing returns nothing
	set ThreatHandlerConfig_TIME_TO_PORT = 10
	set ThreatHandlerConfig_RETURN_RANGE = 1500.
	set ThreatHandlerConfig_ORDER_RETURN_RANGE = 4000.
	set ThreatHandlerConfig_CAMP_RANGE = 400.
endfunction

function init_TimerUtils takes nothing returns nothing
	set TimerUtils_freeTimersCount = 0
	set TimerUtils_timerData = new_Table()
	set TimerUtils_HELD = 679645218
endfunction

function init_Trigger takes nothing returns nothing
	call new_Table()
endfunction

function init_TypeCasting takes nothing returns nothing
	call new_Table()
endfunction

function UnitDefinition_setStructuresBuilt takes integer this, string data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setString(W3UDefinition_def[tempIndex], "ubui", data)
endfunction

function dispatch_UnitDefinition_setStructuresBuilt takes integer this, string data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitDefinition.setStructuresBuilt")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitDefinition.setStructuresBuilt on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitDefinition_setStructuresBuilt(this, data)
endfunction

function UnitOrHeroDefinition_setLevel takes integer this, integer data returns nothing
	local integer tempIndex = this
	call ObjectDefinition_setInt(W3UDefinition_def[tempIndex], "ulev", data)
endfunction

function dispatch_UnitOrHeroDefinition_setLevel takes integer this, integer data returns nothing
	if W3UDefinition_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitOrHeroDefinition.setLevel")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitOrHeroDefinition.setLevel on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call UnitOrHeroDefinition_setLevel(this, data)
endfunction

function alloc_UnitDefinition takes nothing returns integer
	local integer this
	if W3UDefinition_firstFree == 0 then
		set W3UDefinition_maxIndex = W3UDefinition_maxIndex + 1
		set this = W3UDefinition_maxIndex
	else
		set W3UDefinition_firstFree = W3UDefinition_firstFree - 1
		set this = W3UDefinition_nextFree[W3UDefinition_firstFree]
	endif
	set W3UDefinition_typeId[this] = 14
	return this
endfunction

function construct_UnitDefinition takes integer this, integer newId, integer origId returns nothing
	call construct_UnitOrHeroDefinition(this, newId, origId)
endfunction

function new_UnitDefinition takes integer newId, integer origId returns integer
	local integer this = alloc_UnitDefinition()
	call construct_UnitDefinition(this, newId, origId)
	return this
endfunction

function alloc_UnitTypeX takes nothing returns integer
	local integer this
	if UnitTypeX_firstFree == 0 then
		set UnitTypeX_maxIndex = UnitTypeX_maxIndex + 1
		set this = UnitTypeX_maxIndex
	else
		set UnitTypeX_firstFree = UnitTypeX_firstFree - 1
		set this = UnitTypeX_nextFree[UnitTypeX_firstFree]
	endif
	return this
endfunction

function new_UnitTypeX takes integer raw, integer unitBaseStatBuffer returns integer
	local integer this = alloc_UnitTypeX()
	call construct_UnitTypeX(this, raw, unitBaseStatBuffer)
	return this
endfunction

function unitgenNewCreep takes integer raw, integer baseRaw, integer level, string name, integer life, integer mana, integer damage, integer armor, integer attackspeed, integer movespeed returns integer
	local integer receiver = new_UnitBaseStatBuffer(raw)
	local integer baseStats
	local integer receiver_2
	local integer receiver_3
	local integer receiver_4
	local integer receiver_5
	local integer receiver_6
	local integer receiver_7
	local integer receiver_8
	local integer receiver_9
	local integer receiver_10
	local integer receiver_11
	local integer receiver_12
	local integer receiver_13
	local integer receiver_14
	local integer receiver_15
	local integer receiver_16
	local integer receiver_17
	local integer receiver_18
	local integer receiver_19
	local integer receiver_20
	local integer receiver_21
	local integer receiver_22
	local integer receiver_23
	local integer receiver_24
	local integer receiver_25
	local integer receiver_26
	local integer receiver_27
	local integer receiver_28
	local integer receiver_29
	local integer receiver_30
	local integer receiver_31
	local integer receiver_32
	local integer receiver_33
	local integer receiver_34
	local integer receiver_35
	local integer receiver_36
	local integer receiver_37
	local integer receiver_38
	local integer receiver_39
	local integer receiver_40
	call dispatch_UnitBaseStatBuffer_set(receiver, 0, life)
	set receiver_2 = receiver
	call dispatch_UnitBaseStatBuffer_set(receiver_2, 1, mana)
	set receiver_3 = receiver_2
	call dispatch_UnitBaseStatBuffer_set(receiver_3, 7, damage)
	set receiver_4 = receiver_3
	call dispatch_UnitBaseStatBuffer_set(receiver_4, 9, armor)
	set receiver_5 = receiver_4
	call dispatch_UnitBaseStatBuffer_set(receiver_5, 10, attackspeed)
	set receiver_6 = receiver_5
	call dispatch_UnitBaseStatBuffer_set(receiver_6, 11, movespeed)
	set baseStats = receiver_6
	set UnitTypeGen_currentUnitTypeX = new_UnitTypeX(raw, baseStats)
	if UnitTypeGen_compiletimeMode then
		set receiver_7 = new_UnitDefinition(raw, baseRaw)
		call dispatch_W3UDefinition_setName(receiver_7, name)
		set receiver_8 = receiver_7
		call dispatch_UnitOrHeroDefinition_setLevel(receiver_8, level)
		set receiver_9 = receiver_8
		call dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsMaximumBase(receiver_9, life)
		set receiver_10 = receiver_9
		call dispatch_UnitOrBuildingOrHeroDefinition_setManaMaximum(receiver_10, mana)
		set receiver_11 = receiver_10
		call dispatch_UnitOrBuildingOrHeroDefinition_setHitPointsRegenerationRate(receiver_11, 0.)
		set receiver_12 = receiver_11
		call dispatch_UnitOrBuildingOrHeroDefinition_setManaRegeneration(receiver_12, 0.)
		set receiver_13 = receiver_12
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageBase(receiver_13, damage - 1)
		set receiver_14 = receiver_13
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageNumberofDice(receiver_14, 1)
		set receiver_15 = receiver_14
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1DamageSidesperDie(receiver_15, 1)
		set receiver_16 = receiver_15
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttacksEnabled(receiver_16, 1)
		set receiver_17 = receiver_16
		call dispatch_UnitOrBuildingOrHeroDefinition_setDefenseBase(receiver_17, armor)
		set receiver_18 = receiver_17
		call dispatch_UnitOrBuildingOrHeroDefinition_setAttack1CooldownTime(receiver_18, attackspeed * 0.01)
		set receiver_19 = receiver_18
		call dispatch_UnitOrBuildingOrHeroDefinition_setSpeedBase(receiver_19, movespeed)
		set receiver_20 = receiver_19
		call dispatch_UnitOrBuildingOrHeroDefinition_setNormalAbilities(receiver_20, "")
		set receiver_21 = receiver_20
		call dispatch_UnitOrBuildingOrHeroDefinition_setDefaultActiveAbility(receiver_21, "")
		set receiver_22 = receiver_21
		call dispatch_UnitOrBuildingOrHeroDefinition_setDependencyEquivalents(receiver_22, "")
		set receiver_23 = receiver_22
		call dispatch_UnitOrBuildingOrHeroDefinition_setDefenseUpgradeBonus(receiver_23, 0)
		set receiver_24 = receiver_23
		call dispatch_UnitDefinition_setStructuresBuilt(receiver_24, "")
		set receiver_25 = receiver_24
		call dispatch_W3UDefinition_setRequirements(receiver_25, "")
		set receiver_26 = receiver_25
		call dispatch_W3UDefinition_setRequirementsLevels(receiver_26, "")
		set receiver_27 = receiver_26
		call dispatch_W3UDefinition_setDescription(receiver_27, "")
		set receiver_28 = receiver_27
		call dispatch_UnitOrBuildingOrHeroDefinition_setNameEditorSuffix(receiver_28, "")
		set receiver_29 = receiver_28
		call dispatch_W3UDefinition_setHotkey(receiver_29, "")
		set receiver_30 = receiver_29
		call dispatch_W3UDefinition_setTooltipBasic(receiver_30, "")
		set receiver_31 = receiver_30
		call dispatch_W3UDefinition_setTooltipExtended(receiver_31, "")
		set receiver_32 = receiver_31
		call dispatch_UnitOrBuildingOrHeroDefinition_setUnitClassification(receiver_32, "")
		set receiver_33 = receiver_32
		call dispatch_UnitOrBuildingOrHeroDefinition_setFoodCost(receiver_33, 0)
		set receiver_34 = receiver_33
		call dispatch_UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedBase(receiver_34, 0)
		set receiver_35 = receiver_34
		call dispatch_UnitOrBuildingOrHeroDefinition_setGoldBountyAwardedNumberofDice(receiver_35, 0)
		set receiver_36 = receiver_35
		call dispatch_UnitOrBuildingOrHeroDefinition_setPointValue(receiver_36, 0)
		set receiver_37 = receiver_36
		call dispatch_UnitOrBuildingOrHeroDefinition_setSleeps(receiver_37, false)
		set receiver_38 = receiver_37
		call dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusNight(receiver_38, 700)
		set receiver_39 = receiver_38
		call dispatch_UnitOrBuildingOrHeroDefinition_setSightRadiusDay(receiver_39, 700)
		set receiver_40 = receiver_39
		call dispatch_UnitOrBuildingOrHeroDefinition_setRace(receiver_40, "orc")
	endif
	return raw
endfunction

function unitgenSetStats takes nothing returns integer
	return UnitTypeX_unitBaseStatBuffer[UnitTypeGen_currentUnitTypeX]
endfunction

function initUnitTypeLists takes nothing returns nothing
	local integer receiver
	local integer receiver_2
	call unitgenNewCreep(1747988528, 1752395892, 1, "Knight", 100, 40, 6, 2, 160, 270)
	set receiver = unitgenSetStats()
	call dispatch_UnitBaseStatBuffer_set(receiver, 12, 20)
	set receiver_2 = receiver
	call dispatch_UnitBaseStatBuffer_set(receiver_2, 13, 15)
endfunction

function init_UnitTypeGen takes nothing returns nothing
	set UnitTypeGen_compiletimeMode = false
	call initUnitTypeLists()
endfunction

function init_UnitTypeX takes nothing returns nothing
	set UnitTypeX_raw2UnitType = new_HashMap()
endfunction

function main takes nothing returns nothing
	call initGlobals()
	call init_Char()
	call init_Table()
	call init_Trigger()
	call init_Colors()
	call init_Maths()
	call init_Region()
	call init_MapBounds()
	call init_Terrain()
	call init_PrintingHelper()
	call init_String()
	call init_TimerUtils()
	call init_TempGroups()
	call init_Rect()
	call init_Basics()
	call init_TypeCasting()
	call init_APT()
	call init_BonusHandlerConfig()
	call init_ObjectIds()
	call init_BonusHandler()
	call init_Rational()
	call init_HashMap()
	call init_StatHandler()
	call init_UnitTypeX()
	call init_HeroDummyGen()
	call init_ThreatHandlerConfig()
	call init_ThreatHandler()
	call init_DamageHandler()
	call init_EquipmentSlotList()
	call init_ItemTypeGen()
	call init_ItemX()
	call init_TestUtils()
	call init_Maptest()
	call init_UnitTypeGen()
endfunction

function config takes nothing returns nothing
endfunction

